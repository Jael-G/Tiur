Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    LIST

Grammar

Rule 0     S' -> statement
Rule 1     statement -> RECEIVE LPAREN data RPAREN
Rule 2     statement -> ADD data PLUS math_Term
Rule 3     statement -> data PLUS_SYMBOL math_Term
Rule 4     statement -> SUBSTRACT data MINUS math_Term
Rule 5     statement -> data MINUS_SYMBOL math_Term
Rule 6     statement -> MULTIPLY data TIMES math_Term
Rule 7     statement -> data MULT_SYMBOL math_Term
Rule 8     statement -> DIVIDE data BY math_Term
Rule 9     statement -> data DIV_SYMBOL math_Term
Rule 10    statement -> RAISE data TO math_Term
Rule 11    statement -> data EXPO_SYMBOL math_Term
Rule 12    math_Term -> data
Rule 13    statement -> SHOW LPAREN data RPAREN
Rule 14    statement -> SHOW LPAREN NAME RPAREN
Rule 15    data -> INT
Rule 16    data -> DOUBLE
Rule 17    data -> STRING
Rule 18    data -> list
Rule 19    data -> statement
Rule 20    list_term -> data
Rule 21    list_term -> data COMMA list_term
Rule 22    list -> LBRACKET list_term RBRACKET
Rule 23    statement -> NAME IS data
Rule 24    statement -> NAME

Terminals, with rules where they appear

ADD                  : 2
AND                  : 
BY                   : 8
COMMA                : 21
DIVIDE               : 8
DIV_SYMBOL           : 9
DOUBLE               : 16
EXPO_SYMBOL          : 11
INT                  : 15
IS                   : 23
LBRACKET             : 22
LIST                 : 
LPAREN               : 1 13 14
MINUS                : 4
MINUS_SYMBOL         : 5
MULTIPLY             : 6
MULT_SYMBOL          : 7
NAME                 : 14 23 24
PLUS                 : 2
PLUS_SYMBOL          : 3
RAISE                : 10
RBRACKET             : 22
RECEIVE              : 1
RPAREN               : 1 13 14
SHOW                 : 13 14
STRING               : 17
SUBSTRACT            : 4
TIMES                : 6
TO                   : 10
error                : 

Nonterminals, with rules where they appear

data                 : 1 2 3 4 5 6 7 8 9 10 11 12 13 20 21 23
list                 : 18
list_term            : 21 22
math_Term            : 2 3 4 5 6 7 8 9 10 11
statement            : 19 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET

    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10
    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15

    statement                      shift and go to state 1
    data                           shift and go to state 3
    list                           shift and go to state 14

state 1

    (0) S' -> statement .
    (19) data -> statement .

    PLUS_SYMBOL     reduce using rule 19 (data -> statement .)
    MINUS_SYMBOL    reduce using rule 19 (data -> statement .)
    MULT_SYMBOL     reduce using rule 19 (data -> statement .)
    DIV_SYMBOL      reduce using rule 19 (data -> statement .)
    EXPO_SYMBOL     reduce using rule 19 (data -> statement .)


state 2

    (1) statement -> RECEIVE . LPAREN data RPAREN

    LPAREN          shift and go to state 16


state 3

    (3) statement -> data . PLUS_SYMBOL math_Term
    (5) statement -> data . MINUS_SYMBOL math_Term
    (7) statement -> data . MULT_SYMBOL math_Term
    (9) statement -> data . DIV_SYMBOL math_Term
    (11) statement -> data . EXPO_SYMBOL math_Term

    PLUS_SYMBOL     shift and go to state 17
    MINUS_SYMBOL    shift and go to state 18
    MULT_SYMBOL     shift and go to state 19
    DIV_SYMBOL      shift and go to state 20
    EXPO_SYMBOL     shift and go to state 21


state 4

    (2) statement -> ADD . data PLUS math_Term
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 22
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 5

    (4) statement -> SUBSTRACT . data MINUS math_Term
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 24
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 6

    (6) statement -> MULTIPLY . data TIMES math_Term
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 25
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 7

    (8) statement -> DIVIDE . data BY math_Term
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 26
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 8

    (10) statement -> RAISE . data TO math_Term
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 27
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 9

    (13) statement -> SHOW . LPAREN data RPAREN
    (14) statement -> SHOW . LPAREN NAME RPAREN

    LPAREN          shift and go to state 28


state 10

    (23) statement -> NAME . IS data
    (24) statement -> NAME .

    IS              shift and go to state 29
    $end            reduce using rule 24 (statement -> NAME .)
    PLUS_SYMBOL     reduce using rule 24 (statement -> NAME .)
    MINUS_SYMBOL    reduce using rule 24 (statement -> NAME .)
    MULT_SYMBOL     reduce using rule 24 (statement -> NAME .)
    DIV_SYMBOL      reduce using rule 24 (statement -> NAME .)
    EXPO_SYMBOL     reduce using rule 24 (statement -> NAME .)
    PLUS            reduce using rule 24 (statement -> NAME .)
    MINUS           reduce using rule 24 (statement -> NAME .)
    TIMES           reduce using rule 24 (statement -> NAME .)
    BY              reduce using rule 24 (statement -> NAME .)
    TO              reduce using rule 24 (statement -> NAME .)
    COMMA           reduce using rule 24 (statement -> NAME .)
    RBRACKET        reduce using rule 24 (statement -> NAME .)
    RPAREN          reduce using rule 24 (statement -> NAME .)


state 11

    (15) data -> INT .

    PLUS_SYMBOL     reduce using rule 15 (data -> INT .)
    MINUS_SYMBOL    reduce using rule 15 (data -> INT .)
    MULT_SYMBOL     reduce using rule 15 (data -> INT .)
    DIV_SYMBOL      reduce using rule 15 (data -> INT .)
    EXPO_SYMBOL     reduce using rule 15 (data -> INT .)
    PLUS            reduce using rule 15 (data -> INT .)
    MINUS           reduce using rule 15 (data -> INT .)
    TIMES           reduce using rule 15 (data -> INT .)
    BY              reduce using rule 15 (data -> INT .)
    TO              reduce using rule 15 (data -> INT .)
    COMMA           reduce using rule 15 (data -> INT .)
    RBRACKET        reduce using rule 15 (data -> INT .)
    RPAREN          reduce using rule 15 (data -> INT .)
    $end            reduce using rule 15 (data -> INT .)


state 12

    (16) data -> DOUBLE .

    PLUS_SYMBOL     reduce using rule 16 (data -> DOUBLE .)
    MINUS_SYMBOL    reduce using rule 16 (data -> DOUBLE .)
    MULT_SYMBOL     reduce using rule 16 (data -> DOUBLE .)
    DIV_SYMBOL      reduce using rule 16 (data -> DOUBLE .)
    EXPO_SYMBOL     reduce using rule 16 (data -> DOUBLE .)
    PLUS            reduce using rule 16 (data -> DOUBLE .)
    MINUS           reduce using rule 16 (data -> DOUBLE .)
    TIMES           reduce using rule 16 (data -> DOUBLE .)
    BY              reduce using rule 16 (data -> DOUBLE .)
    TO              reduce using rule 16 (data -> DOUBLE .)
    COMMA           reduce using rule 16 (data -> DOUBLE .)
    RBRACKET        reduce using rule 16 (data -> DOUBLE .)
    RPAREN          reduce using rule 16 (data -> DOUBLE .)
    $end            reduce using rule 16 (data -> DOUBLE .)


state 13

    (17) data -> STRING .

    PLUS_SYMBOL     reduce using rule 17 (data -> STRING .)
    MINUS_SYMBOL    reduce using rule 17 (data -> STRING .)
    MULT_SYMBOL     reduce using rule 17 (data -> STRING .)
    DIV_SYMBOL      reduce using rule 17 (data -> STRING .)
    EXPO_SYMBOL     reduce using rule 17 (data -> STRING .)
    PLUS            reduce using rule 17 (data -> STRING .)
    MINUS           reduce using rule 17 (data -> STRING .)
    TIMES           reduce using rule 17 (data -> STRING .)
    BY              reduce using rule 17 (data -> STRING .)
    TO              reduce using rule 17 (data -> STRING .)
    COMMA           reduce using rule 17 (data -> STRING .)
    RBRACKET        reduce using rule 17 (data -> STRING .)
    RPAREN          reduce using rule 17 (data -> STRING .)
    $end            reduce using rule 17 (data -> STRING .)


state 14

    (18) data -> list .

    PLUS_SYMBOL     reduce using rule 18 (data -> list .)
    MINUS_SYMBOL    reduce using rule 18 (data -> list .)
    MULT_SYMBOL     reduce using rule 18 (data -> list .)
    DIV_SYMBOL      reduce using rule 18 (data -> list .)
    EXPO_SYMBOL     reduce using rule 18 (data -> list .)
    PLUS            reduce using rule 18 (data -> list .)
    MINUS           reduce using rule 18 (data -> list .)
    TIMES           reduce using rule 18 (data -> list .)
    BY              reduce using rule 18 (data -> list .)
    TO              reduce using rule 18 (data -> list .)
    COMMA           reduce using rule 18 (data -> list .)
    RBRACKET        reduce using rule 18 (data -> list .)
    RPAREN          reduce using rule 18 (data -> list .)
    $end            reduce using rule 18 (data -> list .)


state 15

    (22) list -> LBRACKET . list_term RBRACKET
    (20) list_term -> . data
    (21) list_term -> . data COMMA list_term
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    list_term                      shift and go to state 30
    data                           shift and go to state 31
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 16

    (1) statement -> RECEIVE LPAREN . data RPAREN
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 32
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 17

    (3) statement -> data PLUS_SYMBOL . math_Term
    (12) math_Term -> . data
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 33
    math_Term                      shift and go to state 34
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 18

    (5) statement -> data MINUS_SYMBOL . math_Term
    (12) math_Term -> . data
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 33
    math_Term                      shift and go to state 35
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 19

    (7) statement -> data MULT_SYMBOL . math_Term
    (12) math_Term -> . data
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 33
    math_Term                      shift and go to state 36
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 20

    (9) statement -> data DIV_SYMBOL . math_Term
    (12) math_Term -> . data
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 33
    math_Term                      shift and go to state 37
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 21

    (11) statement -> data EXPO_SYMBOL . math_Term
    (12) math_Term -> . data
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 33
    math_Term                      shift and go to state 38
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 22

    (2) statement -> ADD data . PLUS math_Term
    (3) statement -> data . PLUS_SYMBOL math_Term
    (5) statement -> data . MINUS_SYMBOL math_Term
    (7) statement -> data . MULT_SYMBOL math_Term
    (9) statement -> data . DIV_SYMBOL math_Term
    (11) statement -> data . EXPO_SYMBOL math_Term

    PLUS            shift and go to state 39
    PLUS_SYMBOL     shift and go to state 17
    MINUS_SYMBOL    shift and go to state 18
    MULT_SYMBOL     shift and go to state 19
    DIV_SYMBOL      shift and go to state 20
    EXPO_SYMBOL     shift and go to state 21


state 23

    (19) data -> statement .

    PLUS            reduce using rule 19 (data -> statement .)
    PLUS_SYMBOL     reduce using rule 19 (data -> statement .)
    MINUS_SYMBOL    reduce using rule 19 (data -> statement .)
    MULT_SYMBOL     reduce using rule 19 (data -> statement .)
    DIV_SYMBOL      reduce using rule 19 (data -> statement .)
    EXPO_SYMBOL     reduce using rule 19 (data -> statement .)
    MINUS           reduce using rule 19 (data -> statement .)
    TIMES           reduce using rule 19 (data -> statement .)
    BY              reduce using rule 19 (data -> statement .)
    TO              reduce using rule 19 (data -> statement .)
    COMMA           reduce using rule 19 (data -> statement .)
    RBRACKET        reduce using rule 19 (data -> statement .)
    RPAREN          reduce using rule 19 (data -> statement .)
    $end            reduce using rule 19 (data -> statement .)


state 24

    (4) statement -> SUBSTRACT data . MINUS math_Term
    (3) statement -> data . PLUS_SYMBOL math_Term
    (5) statement -> data . MINUS_SYMBOL math_Term
    (7) statement -> data . MULT_SYMBOL math_Term
    (9) statement -> data . DIV_SYMBOL math_Term
    (11) statement -> data . EXPO_SYMBOL math_Term

    MINUS           shift and go to state 40
    PLUS_SYMBOL     shift and go to state 17
    MINUS_SYMBOL    shift and go to state 18
    MULT_SYMBOL     shift and go to state 19
    DIV_SYMBOL      shift and go to state 20
    EXPO_SYMBOL     shift and go to state 21


state 25

    (6) statement -> MULTIPLY data . TIMES math_Term
    (3) statement -> data . PLUS_SYMBOL math_Term
    (5) statement -> data . MINUS_SYMBOL math_Term
    (7) statement -> data . MULT_SYMBOL math_Term
    (9) statement -> data . DIV_SYMBOL math_Term
    (11) statement -> data . EXPO_SYMBOL math_Term

    TIMES           shift and go to state 41
    PLUS_SYMBOL     shift and go to state 17
    MINUS_SYMBOL    shift and go to state 18
    MULT_SYMBOL     shift and go to state 19
    DIV_SYMBOL      shift and go to state 20
    EXPO_SYMBOL     shift and go to state 21


state 26

    (8) statement -> DIVIDE data . BY math_Term
    (3) statement -> data . PLUS_SYMBOL math_Term
    (5) statement -> data . MINUS_SYMBOL math_Term
    (7) statement -> data . MULT_SYMBOL math_Term
    (9) statement -> data . DIV_SYMBOL math_Term
    (11) statement -> data . EXPO_SYMBOL math_Term

    BY              shift and go to state 42
    PLUS_SYMBOL     shift and go to state 17
    MINUS_SYMBOL    shift and go to state 18
    MULT_SYMBOL     shift and go to state 19
    DIV_SYMBOL      shift and go to state 20
    EXPO_SYMBOL     shift and go to state 21


state 27

    (10) statement -> RAISE data . TO math_Term
    (3) statement -> data . PLUS_SYMBOL math_Term
    (5) statement -> data . MINUS_SYMBOL math_Term
    (7) statement -> data . MULT_SYMBOL math_Term
    (9) statement -> data . DIV_SYMBOL math_Term
    (11) statement -> data . EXPO_SYMBOL math_Term

    TO              shift and go to state 43
    PLUS_SYMBOL     shift and go to state 17
    MINUS_SYMBOL    shift and go to state 18
    MULT_SYMBOL     shift and go to state 19
    DIV_SYMBOL      shift and go to state 20
    EXPO_SYMBOL     shift and go to state 21


state 28

    (13) statement -> SHOW LPAREN . data RPAREN
    (14) statement -> SHOW LPAREN . NAME RPAREN
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    NAME            shift and go to state 45
    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9

    data                           shift and go to state 44
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 29

    (23) statement -> NAME IS . data
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 46
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 30

    (22) list -> LBRACKET list_term . RBRACKET

    RBRACKET        shift and go to state 47


state 31

    (20) list_term -> data .
    (21) list_term -> data . COMMA list_term
    (3) statement -> data . PLUS_SYMBOL math_Term
    (5) statement -> data . MINUS_SYMBOL math_Term
    (7) statement -> data . MULT_SYMBOL math_Term
    (9) statement -> data . DIV_SYMBOL math_Term
    (11) statement -> data . EXPO_SYMBOL math_Term

    RBRACKET        reduce using rule 20 (list_term -> data .)
    COMMA           shift and go to state 48
    PLUS_SYMBOL     shift and go to state 17
    MINUS_SYMBOL    shift and go to state 18
    MULT_SYMBOL     shift and go to state 19
    DIV_SYMBOL      shift and go to state 20
    EXPO_SYMBOL     shift and go to state 21


state 32

    (1) statement -> RECEIVE LPAREN data . RPAREN
    (3) statement -> data . PLUS_SYMBOL math_Term
    (5) statement -> data . MINUS_SYMBOL math_Term
    (7) statement -> data . MULT_SYMBOL math_Term
    (9) statement -> data . DIV_SYMBOL math_Term
    (11) statement -> data . EXPO_SYMBOL math_Term

    RPAREN          shift and go to state 49
    PLUS_SYMBOL     shift and go to state 17
    MINUS_SYMBOL    shift and go to state 18
    MULT_SYMBOL     shift and go to state 19
    DIV_SYMBOL      shift and go to state 20
    EXPO_SYMBOL     shift and go to state 21


state 33

    (12) math_Term -> data .
    (3) statement -> data . PLUS_SYMBOL math_Term
    (5) statement -> data . MINUS_SYMBOL math_Term
    (7) statement -> data . MULT_SYMBOL math_Term
    (9) statement -> data . DIV_SYMBOL math_Term
    (11) statement -> data . EXPO_SYMBOL math_Term

  ! shift/reduce conflict for PLUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MINUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MULT_SYMBOL resolved as shift
  ! shift/reduce conflict for DIV_SYMBOL resolved as shift
  ! shift/reduce conflict for EXPO_SYMBOL resolved as shift
    $end            reduce using rule 12 (math_Term -> data .)
    PLUS            reduce using rule 12 (math_Term -> data .)
    MINUS           reduce using rule 12 (math_Term -> data .)
    TIMES           reduce using rule 12 (math_Term -> data .)
    BY              reduce using rule 12 (math_Term -> data .)
    TO              reduce using rule 12 (math_Term -> data .)
    COMMA           reduce using rule 12 (math_Term -> data .)
    RBRACKET        reduce using rule 12 (math_Term -> data .)
    RPAREN          reduce using rule 12 (math_Term -> data .)
    PLUS_SYMBOL     shift and go to state 17
    MINUS_SYMBOL    shift and go to state 18
    MULT_SYMBOL     shift and go to state 19
    DIV_SYMBOL      shift and go to state 20
    EXPO_SYMBOL     shift and go to state 21

  ! PLUS_SYMBOL     [ reduce using rule 12 (math_Term -> data .) ]
  ! MINUS_SYMBOL    [ reduce using rule 12 (math_Term -> data .) ]
  ! MULT_SYMBOL     [ reduce using rule 12 (math_Term -> data .) ]
  ! DIV_SYMBOL      [ reduce using rule 12 (math_Term -> data .) ]
  ! EXPO_SYMBOL     [ reduce using rule 12 (math_Term -> data .) ]


state 34

    (3) statement -> data PLUS_SYMBOL math_Term .

    $end            reduce using rule 3 (statement -> data PLUS_SYMBOL math_Term .)
    PLUS_SYMBOL     reduce using rule 3 (statement -> data PLUS_SYMBOL math_Term .)
    MINUS_SYMBOL    reduce using rule 3 (statement -> data PLUS_SYMBOL math_Term .)
    MULT_SYMBOL     reduce using rule 3 (statement -> data PLUS_SYMBOL math_Term .)
    DIV_SYMBOL      reduce using rule 3 (statement -> data PLUS_SYMBOL math_Term .)
    EXPO_SYMBOL     reduce using rule 3 (statement -> data PLUS_SYMBOL math_Term .)
    PLUS            reduce using rule 3 (statement -> data PLUS_SYMBOL math_Term .)
    MINUS           reduce using rule 3 (statement -> data PLUS_SYMBOL math_Term .)
    TIMES           reduce using rule 3 (statement -> data PLUS_SYMBOL math_Term .)
    BY              reduce using rule 3 (statement -> data PLUS_SYMBOL math_Term .)
    TO              reduce using rule 3 (statement -> data PLUS_SYMBOL math_Term .)
    COMMA           reduce using rule 3 (statement -> data PLUS_SYMBOL math_Term .)
    RBRACKET        reduce using rule 3 (statement -> data PLUS_SYMBOL math_Term .)
    RPAREN          reduce using rule 3 (statement -> data PLUS_SYMBOL math_Term .)


state 35

    (5) statement -> data MINUS_SYMBOL math_Term .

    $end            reduce using rule 5 (statement -> data MINUS_SYMBOL math_Term .)
    PLUS_SYMBOL     reduce using rule 5 (statement -> data MINUS_SYMBOL math_Term .)
    MINUS_SYMBOL    reduce using rule 5 (statement -> data MINUS_SYMBOL math_Term .)
    MULT_SYMBOL     reduce using rule 5 (statement -> data MINUS_SYMBOL math_Term .)
    DIV_SYMBOL      reduce using rule 5 (statement -> data MINUS_SYMBOL math_Term .)
    EXPO_SYMBOL     reduce using rule 5 (statement -> data MINUS_SYMBOL math_Term .)
    PLUS            reduce using rule 5 (statement -> data MINUS_SYMBOL math_Term .)
    MINUS           reduce using rule 5 (statement -> data MINUS_SYMBOL math_Term .)
    TIMES           reduce using rule 5 (statement -> data MINUS_SYMBOL math_Term .)
    BY              reduce using rule 5 (statement -> data MINUS_SYMBOL math_Term .)
    TO              reduce using rule 5 (statement -> data MINUS_SYMBOL math_Term .)
    COMMA           reduce using rule 5 (statement -> data MINUS_SYMBOL math_Term .)
    RBRACKET        reduce using rule 5 (statement -> data MINUS_SYMBOL math_Term .)
    RPAREN          reduce using rule 5 (statement -> data MINUS_SYMBOL math_Term .)


state 36

    (7) statement -> data MULT_SYMBOL math_Term .

    $end            reduce using rule 7 (statement -> data MULT_SYMBOL math_Term .)
    PLUS_SYMBOL     reduce using rule 7 (statement -> data MULT_SYMBOL math_Term .)
    MINUS_SYMBOL    reduce using rule 7 (statement -> data MULT_SYMBOL math_Term .)
    MULT_SYMBOL     reduce using rule 7 (statement -> data MULT_SYMBOL math_Term .)
    DIV_SYMBOL      reduce using rule 7 (statement -> data MULT_SYMBOL math_Term .)
    EXPO_SYMBOL     reduce using rule 7 (statement -> data MULT_SYMBOL math_Term .)
    PLUS            reduce using rule 7 (statement -> data MULT_SYMBOL math_Term .)
    MINUS           reduce using rule 7 (statement -> data MULT_SYMBOL math_Term .)
    TIMES           reduce using rule 7 (statement -> data MULT_SYMBOL math_Term .)
    BY              reduce using rule 7 (statement -> data MULT_SYMBOL math_Term .)
    TO              reduce using rule 7 (statement -> data MULT_SYMBOL math_Term .)
    COMMA           reduce using rule 7 (statement -> data MULT_SYMBOL math_Term .)
    RBRACKET        reduce using rule 7 (statement -> data MULT_SYMBOL math_Term .)
    RPAREN          reduce using rule 7 (statement -> data MULT_SYMBOL math_Term .)


state 37

    (9) statement -> data DIV_SYMBOL math_Term .

    $end            reduce using rule 9 (statement -> data DIV_SYMBOL math_Term .)
    PLUS_SYMBOL     reduce using rule 9 (statement -> data DIV_SYMBOL math_Term .)
    MINUS_SYMBOL    reduce using rule 9 (statement -> data DIV_SYMBOL math_Term .)
    MULT_SYMBOL     reduce using rule 9 (statement -> data DIV_SYMBOL math_Term .)
    DIV_SYMBOL      reduce using rule 9 (statement -> data DIV_SYMBOL math_Term .)
    EXPO_SYMBOL     reduce using rule 9 (statement -> data DIV_SYMBOL math_Term .)
    PLUS            reduce using rule 9 (statement -> data DIV_SYMBOL math_Term .)
    MINUS           reduce using rule 9 (statement -> data DIV_SYMBOL math_Term .)
    TIMES           reduce using rule 9 (statement -> data DIV_SYMBOL math_Term .)
    BY              reduce using rule 9 (statement -> data DIV_SYMBOL math_Term .)
    TO              reduce using rule 9 (statement -> data DIV_SYMBOL math_Term .)
    COMMA           reduce using rule 9 (statement -> data DIV_SYMBOL math_Term .)
    RBRACKET        reduce using rule 9 (statement -> data DIV_SYMBOL math_Term .)
    RPAREN          reduce using rule 9 (statement -> data DIV_SYMBOL math_Term .)


state 38

    (11) statement -> data EXPO_SYMBOL math_Term .

    $end            reduce using rule 11 (statement -> data EXPO_SYMBOL math_Term .)
    PLUS_SYMBOL     reduce using rule 11 (statement -> data EXPO_SYMBOL math_Term .)
    MINUS_SYMBOL    reduce using rule 11 (statement -> data EXPO_SYMBOL math_Term .)
    MULT_SYMBOL     reduce using rule 11 (statement -> data EXPO_SYMBOL math_Term .)
    DIV_SYMBOL      reduce using rule 11 (statement -> data EXPO_SYMBOL math_Term .)
    EXPO_SYMBOL     reduce using rule 11 (statement -> data EXPO_SYMBOL math_Term .)
    PLUS            reduce using rule 11 (statement -> data EXPO_SYMBOL math_Term .)
    MINUS           reduce using rule 11 (statement -> data EXPO_SYMBOL math_Term .)
    TIMES           reduce using rule 11 (statement -> data EXPO_SYMBOL math_Term .)
    BY              reduce using rule 11 (statement -> data EXPO_SYMBOL math_Term .)
    TO              reduce using rule 11 (statement -> data EXPO_SYMBOL math_Term .)
    COMMA           reduce using rule 11 (statement -> data EXPO_SYMBOL math_Term .)
    RBRACKET        reduce using rule 11 (statement -> data EXPO_SYMBOL math_Term .)
    RPAREN          reduce using rule 11 (statement -> data EXPO_SYMBOL math_Term .)


state 39

    (2) statement -> ADD data PLUS . math_Term
    (12) math_Term -> . data
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 33
    math_Term                      shift and go to state 50
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 40

    (4) statement -> SUBSTRACT data MINUS . math_Term
    (12) math_Term -> . data
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 33
    math_Term                      shift and go to state 51
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 41

    (6) statement -> MULTIPLY data TIMES . math_Term
    (12) math_Term -> . data
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 33
    math_Term                      shift and go to state 52
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 42

    (8) statement -> DIVIDE data BY . math_Term
    (12) math_Term -> . data
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 33
    math_Term                      shift and go to state 53
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 43

    (10) statement -> RAISE data TO . math_Term
    (12) math_Term -> . data
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 33
    math_Term                      shift and go to state 54
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 44

    (13) statement -> SHOW LPAREN data . RPAREN
    (3) statement -> data . PLUS_SYMBOL math_Term
    (5) statement -> data . MINUS_SYMBOL math_Term
    (7) statement -> data . MULT_SYMBOL math_Term
    (9) statement -> data . DIV_SYMBOL math_Term
    (11) statement -> data . EXPO_SYMBOL math_Term

    RPAREN          shift and go to state 55
    PLUS_SYMBOL     shift and go to state 17
    MINUS_SYMBOL    shift and go to state 18
    MULT_SYMBOL     shift and go to state 19
    DIV_SYMBOL      shift and go to state 20
    EXPO_SYMBOL     shift and go to state 21


state 45

    (14) statement -> SHOW LPAREN NAME . RPAREN
    (23) statement -> NAME . IS data
    (24) statement -> NAME .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 56
    IS              shift and go to state 29
    PLUS_SYMBOL     reduce using rule 24 (statement -> NAME .)
    MINUS_SYMBOL    reduce using rule 24 (statement -> NAME .)
    MULT_SYMBOL     reduce using rule 24 (statement -> NAME .)
    DIV_SYMBOL      reduce using rule 24 (statement -> NAME .)
    EXPO_SYMBOL     reduce using rule 24 (statement -> NAME .)

  ! RPAREN          [ reduce using rule 24 (statement -> NAME .) ]


state 46

    (23) statement -> NAME IS data .
    (3) statement -> data . PLUS_SYMBOL math_Term
    (5) statement -> data . MINUS_SYMBOL math_Term
    (7) statement -> data . MULT_SYMBOL math_Term
    (9) statement -> data . DIV_SYMBOL math_Term
    (11) statement -> data . EXPO_SYMBOL math_Term

  ! shift/reduce conflict for PLUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MINUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MULT_SYMBOL resolved as shift
  ! shift/reduce conflict for DIV_SYMBOL resolved as shift
  ! shift/reduce conflict for EXPO_SYMBOL resolved as shift
    $end            reduce using rule 23 (statement -> NAME IS data .)
    PLUS            reduce using rule 23 (statement -> NAME IS data .)
    MINUS           reduce using rule 23 (statement -> NAME IS data .)
    TIMES           reduce using rule 23 (statement -> NAME IS data .)
    BY              reduce using rule 23 (statement -> NAME IS data .)
    TO              reduce using rule 23 (statement -> NAME IS data .)
    COMMA           reduce using rule 23 (statement -> NAME IS data .)
    RBRACKET        reduce using rule 23 (statement -> NAME IS data .)
    RPAREN          reduce using rule 23 (statement -> NAME IS data .)
    PLUS_SYMBOL     shift and go to state 17
    MINUS_SYMBOL    shift and go to state 18
    MULT_SYMBOL     shift and go to state 19
    DIV_SYMBOL      shift and go to state 20
    EXPO_SYMBOL     shift and go to state 21

  ! PLUS_SYMBOL     [ reduce using rule 23 (statement -> NAME IS data .) ]
  ! MINUS_SYMBOL    [ reduce using rule 23 (statement -> NAME IS data .) ]
  ! MULT_SYMBOL     [ reduce using rule 23 (statement -> NAME IS data .) ]
  ! DIV_SYMBOL      [ reduce using rule 23 (statement -> NAME IS data .) ]
  ! EXPO_SYMBOL     [ reduce using rule 23 (statement -> NAME IS data .) ]


state 47

    (22) list -> LBRACKET list_term RBRACKET .

    PLUS_SYMBOL     reduce using rule 22 (list -> LBRACKET list_term RBRACKET .)
    MINUS_SYMBOL    reduce using rule 22 (list -> LBRACKET list_term RBRACKET .)
    MULT_SYMBOL     reduce using rule 22 (list -> LBRACKET list_term RBRACKET .)
    DIV_SYMBOL      reduce using rule 22 (list -> LBRACKET list_term RBRACKET .)
    EXPO_SYMBOL     reduce using rule 22 (list -> LBRACKET list_term RBRACKET .)
    PLUS            reduce using rule 22 (list -> LBRACKET list_term RBRACKET .)
    MINUS           reduce using rule 22 (list -> LBRACKET list_term RBRACKET .)
    TIMES           reduce using rule 22 (list -> LBRACKET list_term RBRACKET .)
    BY              reduce using rule 22 (list -> LBRACKET list_term RBRACKET .)
    TO              reduce using rule 22 (list -> LBRACKET list_term RBRACKET .)
    COMMA           reduce using rule 22 (list -> LBRACKET list_term RBRACKET .)
    RBRACKET        reduce using rule 22 (list -> LBRACKET list_term RBRACKET .)
    RPAREN          reduce using rule 22 (list -> LBRACKET list_term RBRACKET .)
    $end            reduce using rule 22 (list -> LBRACKET list_term RBRACKET .)


state 48

    (21) list_term -> data COMMA . list_term
    (20) list_term -> . data
    (21) list_term -> . data COMMA list_term
    (15) data -> . INT
    (16) data -> . DOUBLE
    (17) data -> . STRING
    (18) data -> . list
    (19) data -> . statement
    (22) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . RECEIVE LPAREN data RPAREN
    (2) statement -> . ADD data PLUS math_Term
    (3) statement -> . data PLUS_SYMBOL math_Term
    (4) statement -> . SUBSTRACT data MINUS math_Term
    (5) statement -> . data MINUS_SYMBOL math_Term
    (6) statement -> . MULTIPLY data TIMES math_Term
    (7) statement -> . data MULT_SYMBOL math_Term
    (8) statement -> . DIVIDE data BY math_Term
    (9) statement -> . data DIV_SYMBOL math_Term
    (10) statement -> . RAISE data TO math_Term
    (11) statement -> . data EXPO_SYMBOL math_Term
    (13) statement -> . SHOW LPAREN data RPAREN
    (14) statement -> . SHOW LPAREN NAME RPAREN
    (23) statement -> . NAME IS data
    (24) statement -> . NAME

    INT             shift and go to state 11
    DOUBLE          shift and go to state 12
    STRING          shift and go to state 13
    LBRACKET        shift and go to state 15
    RECEIVE         shift and go to state 2
    ADD             shift and go to state 4
    SUBSTRACT       shift and go to state 5
    MULTIPLY        shift and go to state 6
    DIVIDE          shift and go to state 7
    RAISE           shift and go to state 8
    SHOW            shift and go to state 9
    NAME            shift and go to state 10

    data                           shift and go to state 31
    list_term                      shift and go to state 57
    list                           shift and go to state 14
    statement                      shift and go to state 23

state 49

    (1) statement -> RECEIVE LPAREN data RPAREN .

    $end            reduce using rule 1 (statement -> RECEIVE LPAREN data RPAREN .)
    PLUS_SYMBOL     reduce using rule 1 (statement -> RECEIVE LPAREN data RPAREN .)
    MINUS_SYMBOL    reduce using rule 1 (statement -> RECEIVE LPAREN data RPAREN .)
    MULT_SYMBOL     reduce using rule 1 (statement -> RECEIVE LPAREN data RPAREN .)
    DIV_SYMBOL      reduce using rule 1 (statement -> RECEIVE LPAREN data RPAREN .)
    EXPO_SYMBOL     reduce using rule 1 (statement -> RECEIVE LPAREN data RPAREN .)
    PLUS            reduce using rule 1 (statement -> RECEIVE LPAREN data RPAREN .)
    MINUS           reduce using rule 1 (statement -> RECEIVE LPAREN data RPAREN .)
    TIMES           reduce using rule 1 (statement -> RECEIVE LPAREN data RPAREN .)
    BY              reduce using rule 1 (statement -> RECEIVE LPAREN data RPAREN .)
    TO              reduce using rule 1 (statement -> RECEIVE LPAREN data RPAREN .)
    COMMA           reduce using rule 1 (statement -> RECEIVE LPAREN data RPAREN .)
    RBRACKET        reduce using rule 1 (statement -> RECEIVE LPAREN data RPAREN .)
    RPAREN          reduce using rule 1 (statement -> RECEIVE LPAREN data RPAREN .)


state 50

    (2) statement -> ADD data PLUS math_Term .

    $end            reduce using rule 2 (statement -> ADD data PLUS math_Term .)
    PLUS_SYMBOL     reduce using rule 2 (statement -> ADD data PLUS math_Term .)
    MINUS_SYMBOL    reduce using rule 2 (statement -> ADD data PLUS math_Term .)
    MULT_SYMBOL     reduce using rule 2 (statement -> ADD data PLUS math_Term .)
    DIV_SYMBOL      reduce using rule 2 (statement -> ADD data PLUS math_Term .)
    EXPO_SYMBOL     reduce using rule 2 (statement -> ADD data PLUS math_Term .)
    PLUS            reduce using rule 2 (statement -> ADD data PLUS math_Term .)
    MINUS           reduce using rule 2 (statement -> ADD data PLUS math_Term .)
    TIMES           reduce using rule 2 (statement -> ADD data PLUS math_Term .)
    BY              reduce using rule 2 (statement -> ADD data PLUS math_Term .)
    TO              reduce using rule 2 (statement -> ADD data PLUS math_Term .)
    COMMA           reduce using rule 2 (statement -> ADD data PLUS math_Term .)
    RBRACKET        reduce using rule 2 (statement -> ADD data PLUS math_Term .)
    RPAREN          reduce using rule 2 (statement -> ADD data PLUS math_Term .)


state 51

    (4) statement -> SUBSTRACT data MINUS math_Term .

    $end            reduce using rule 4 (statement -> SUBSTRACT data MINUS math_Term .)
    PLUS_SYMBOL     reduce using rule 4 (statement -> SUBSTRACT data MINUS math_Term .)
    MINUS_SYMBOL    reduce using rule 4 (statement -> SUBSTRACT data MINUS math_Term .)
    MULT_SYMBOL     reduce using rule 4 (statement -> SUBSTRACT data MINUS math_Term .)
    DIV_SYMBOL      reduce using rule 4 (statement -> SUBSTRACT data MINUS math_Term .)
    EXPO_SYMBOL     reduce using rule 4 (statement -> SUBSTRACT data MINUS math_Term .)
    PLUS            reduce using rule 4 (statement -> SUBSTRACT data MINUS math_Term .)
    MINUS           reduce using rule 4 (statement -> SUBSTRACT data MINUS math_Term .)
    TIMES           reduce using rule 4 (statement -> SUBSTRACT data MINUS math_Term .)
    BY              reduce using rule 4 (statement -> SUBSTRACT data MINUS math_Term .)
    TO              reduce using rule 4 (statement -> SUBSTRACT data MINUS math_Term .)
    COMMA           reduce using rule 4 (statement -> SUBSTRACT data MINUS math_Term .)
    RBRACKET        reduce using rule 4 (statement -> SUBSTRACT data MINUS math_Term .)
    RPAREN          reduce using rule 4 (statement -> SUBSTRACT data MINUS math_Term .)


state 52

    (6) statement -> MULTIPLY data TIMES math_Term .

    $end            reduce using rule 6 (statement -> MULTIPLY data TIMES math_Term .)
    PLUS_SYMBOL     reduce using rule 6 (statement -> MULTIPLY data TIMES math_Term .)
    MINUS_SYMBOL    reduce using rule 6 (statement -> MULTIPLY data TIMES math_Term .)
    MULT_SYMBOL     reduce using rule 6 (statement -> MULTIPLY data TIMES math_Term .)
    DIV_SYMBOL      reduce using rule 6 (statement -> MULTIPLY data TIMES math_Term .)
    EXPO_SYMBOL     reduce using rule 6 (statement -> MULTIPLY data TIMES math_Term .)
    PLUS            reduce using rule 6 (statement -> MULTIPLY data TIMES math_Term .)
    MINUS           reduce using rule 6 (statement -> MULTIPLY data TIMES math_Term .)
    TIMES           reduce using rule 6 (statement -> MULTIPLY data TIMES math_Term .)
    BY              reduce using rule 6 (statement -> MULTIPLY data TIMES math_Term .)
    TO              reduce using rule 6 (statement -> MULTIPLY data TIMES math_Term .)
    COMMA           reduce using rule 6 (statement -> MULTIPLY data TIMES math_Term .)
    RBRACKET        reduce using rule 6 (statement -> MULTIPLY data TIMES math_Term .)
    RPAREN          reduce using rule 6 (statement -> MULTIPLY data TIMES math_Term .)


state 53

    (8) statement -> DIVIDE data BY math_Term .

    $end            reduce using rule 8 (statement -> DIVIDE data BY math_Term .)
    PLUS_SYMBOL     reduce using rule 8 (statement -> DIVIDE data BY math_Term .)
    MINUS_SYMBOL    reduce using rule 8 (statement -> DIVIDE data BY math_Term .)
    MULT_SYMBOL     reduce using rule 8 (statement -> DIVIDE data BY math_Term .)
    DIV_SYMBOL      reduce using rule 8 (statement -> DIVIDE data BY math_Term .)
    EXPO_SYMBOL     reduce using rule 8 (statement -> DIVIDE data BY math_Term .)
    PLUS            reduce using rule 8 (statement -> DIVIDE data BY math_Term .)
    MINUS           reduce using rule 8 (statement -> DIVIDE data BY math_Term .)
    TIMES           reduce using rule 8 (statement -> DIVIDE data BY math_Term .)
    BY              reduce using rule 8 (statement -> DIVIDE data BY math_Term .)
    TO              reduce using rule 8 (statement -> DIVIDE data BY math_Term .)
    COMMA           reduce using rule 8 (statement -> DIVIDE data BY math_Term .)
    RBRACKET        reduce using rule 8 (statement -> DIVIDE data BY math_Term .)
    RPAREN          reduce using rule 8 (statement -> DIVIDE data BY math_Term .)


state 54

    (10) statement -> RAISE data TO math_Term .

    $end            reduce using rule 10 (statement -> RAISE data TO math_Term .)
    PLUS_SYMBOL     reduce using rule 10 (statement -> RAISE data TO math_Term .)
    MINUS_SYMBOL    reduce using rule 10 (statement -> RAISE data TO math_Term .)
    MULT_SYMBOL     reduce using rule 10 (statement -> RAISE data TO math_Term .)
    DIV_SYMBOL      reduce using rule 10 (statement -> RAISE data TO math_Term .)
    EXPO_SYMBOL     reduce using rule 10 (statement -> RAISE data TO math_Term .)
    PLUS            reduce using rule 10 (statement -> RAISE data TO math_Term .)
    MINUS           reduce using rule 10 (statement -> RAISE data TO math_Term .)
    TIMES           reduce using rule 10 (statement -> RAISE data TO math_Term .)
    BY              reduce using rule 10 (statement -> RAISE data TO math_Term .)
    TO              reduce using rule 10 (statement -> RAISE data TO math_Term .)
    COMMA           reduce using rule 10 (statement -> RAISE data TO math_Term .)
    RBRACKET        reduce using rule 10 (statement -> RAISE data TO math_Term .)
    RPAREN          reduce using rule 10 (statement -> RAISE data TO math_Term .)


state 55

    (13) statement -> SHOW LPAREN data RPAREN .

    $end            reduce using rule 13 (statement -> SHOW LPAREN data RPAREN .)
    PLUS_SYMBOL     reduce using rule 13 (statement -> SHOW LPAREN data RPAREN .)
    MINUS_SYMBOL    reduce using rule 13 (statement -> SHOW LPAREN data RPAREN .)
    MULT_SYMBOL     reduce using rule 13 (statement -> SHOW LPAREN data RPAREN .)
    DIV_SYMBOL      reduce using rule 13 (statement -> SHOW LPAREN data RPAREN .)
    EXPO_SYMBOL     reduce using rule 13 (statement -> SHOW LPAREN data RPAREN .)
    PLUS            reduce using rule 13 (statement -> SHOW LPAREN data RPAREN .)
    MINUS           reduce using rule 13 (statement -> SHOW LPAREN data RPAREN .)
    TIMES           reduce using rule 13 (statement -> SHOW LPAREN data RPAREN .)
    BY              reduce using rule 13 (statement -> SHOW LPAREN data RPAREN .)
    TO              reduce using rule 13 (statement -> SHOW LPAREN data RPAREN .)
    COMMA           reduce using rule 13 (statement -> SHOW LPAREN data RPAREN .)
    RBRACKET        reduce using rule 13 (statement -> SHOW LPAREN data RPAREN .)
    RPAREN          reduce using rule 13 (statement -> SHOW LPAREN data RPAREN .)


state 56

    (14) statement -> SHOW LPAREN NAME RPAREN .

    $end            reduce using rule 14 (statement -> SHOW LPAREN NAME RPAREN .)
    PLUS_SYMBOL     reduce using rule 14 (statement -> SHOW LPAREN NAME RPAREN .)
    MINUS_SYMBOL    reduce using rule 14 (statement -> SHOW LPAREN NAME RPAREN .)
    MULT_SYMBOL     reduce using rule 14 (statement -> SHOW LPAREN NAME RPAREN .)
    DIV_SYMBOL      reduce using rule 14 (statement -> SHOW LPAREN NAME RPAREN .)
    EXPO_SYMBOL     reduce using rule 14 (statement -> SHOW LPAREN NAME RPAREN .)
    PLUS            reduce using rule 14 (statement -> SHOW LPAREN NAME RPAREN .)
    MINUS           reduce using rule 14 (statement -> SHOW LPAREN NAME RPAREN .)
    TIMES           reduce using rule 14 (statement -> SHOW LPAREN NAME RPAREN .)
    BY              reduce using rule 14 (statement -> SHOW LPAREN NAME RPAREN .)
    TO              reduce using rule 14 (statement -> SHOW LPAREN NAME RPAREN .)
    COMMA           reduce using rule 14 (statement -> SHOW LPAREN NAME RPAREN .)
    RBRACKET        reduce using rule 14 (statement -> SHOW LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 14 (statement -> SHOW LPAREN NAME RPAREN .)


state 57

    (21) list_term -> data COMMA list_term .

    RBRACKET        reduce using rule 21 (list_term -> data COMMA list_term .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS_SYMBOL in state 33 resolved as shift
WARNING: shift/reduce conflict for MINUS_SYMBOL in state 33 resolved as shift
WARNING: shift/reduce conflict for MULT_SYMBOL in state 33 resolved as shift
WARNING: shift/reduce conflict for DIV_SYMBOL in state 33 resolved as shift
WARNING: shift/reduce conflict for EXPO_SYMBOL in state 33 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 45 resolved as shift
WARNING: shift/reduce conflict for PLUS_SYMBOL in state 46 resolved as shift
WARNING: shift/reduce conflict for MINUS_SYMBOL in state 46 resolved as shift
WARNING: shift/reduce conflict for MULT_SYMBOL in state 46 resolved as shift
WARNING: shift/reduce conflict for DIV_SYMBOL in state 46 resolved as shift
WARNING: shift/reduce conflict for EXPO_SYMBOL in state 46 resolved as shift
