Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND

Grammar

Rule 0     S' -> statement
Rule 1     statement -> TO_INT LPAREN data RPAREN
Rule 2     statement -> RECEIVE LPAREN data RPAREN
Rule 3     statement -> ADD math_term PLUS math_term
Rule 4     statement -> math_term PLUS_SYMBOL math_term
Rule 5     statement -> SUBSTRACT math_term MINUS math_term
Rule 6     statement -> math_term MINUS_SYMBOL math_term
Rule 7     statement -> MULTIPLY math_term TIMES math_term
Rule 8     statement -> math_term MULT_SYMBOL math_term
Rule 9     statement -> DIVIDE math_term BY math_term
Rule 10    statement -> math_term DIV_SYMBOL math_term
Rule 11    statement -> RAISE math_term TO math_term
Rule 12    statement -> math_term EXPO_SYMBOL math_term
Rule 13    math_term -> data
Rule 14    math_term -> NAME
Rule 15    statement -> data EQUAL_TO data
Rule 16    statement -> data MORE_THAN data
Rule 17    statement -> data LESS_THAN data
Rule 18    statement -> data MORE_OR_EQUAL data
Rule 19    statement -> data LESS_OR_EQUAL data
Rule 20    statement -> data NOT_EQUAL data
Rule 21    statement -> IF data EQUAL_TO data THEN
Rule 22    statement -> IF data MORE_THAN data THEN
Rule 23    statement -> IF data LESS_THAN data THEN
Rule 24    statement -> IF data MORE_OR_EQUAL data THEN
Rule 25    statement -> IF data LESS_OR_EQUAL data THEN
Rule 26    statement -> IF data NOT_EQUAL data THEN
Rule 27    statement -> SHOW LPAREN data RPAREN
Rule 28    statement -> SHOW LPAREN NAME RPAREN
Rule 29    data -> INT
Rule 30    data -> DOUBLE
Rule 31    data -> STRING
Rule 32    data -> list
Rule 33    data -> statement
Rule 34    data -> NAME
Rule 35    list_term -> data
Rule 36    list_term -> data COMMA list_term
Rule 37    list -> LIST OF list_term
Rule 38    list -> LBRACKET list_term RBRACKET
Rule 39    statement -> NAME IS data
Rule 40    statement -> NAME EQUAL data
Rule 41    statement -> NAME

Terminals, with rules where they appear

ADD                  : 3
AND                  : 
BY                   : 9
COMMA                : 36
DIVIDE               : 9
DIV_SYMBOL           : 10
DOUBLE               : 30
EQUAL                : 40
EQUAL_TO             : 15 21
EXPO_SYMBOL          : 12
IF                   : 21 22 23 24 25 26
INT                  : 29
IS                   : 39
LBRACKET             : 38
LESS_OR_EQUAL        : 19 25
LESS_THAN            : 17 23
LIST                 : 37
LPAREN               : 1 2 27 28
MINUS                : 5
MINUS_SYMBOL         : 6
MORE_OR_EQUAL        : 18 24
MORE_THAN            : 16 22
MULTIPLY             : 7
MULT_SYMBOL          : 8
NAME                 : 14 28 34 39 40 41
NOT_EQUAL            : 20 26
OF                   : 37
PLUS                 : 3
PLUS_SYMBOL          : 4
RAISE                : 11
RBRACKET             : 38
RECEIVE              : 2
RPAREN               : 1 2 27 28
SHOW                 : 27 28
STRING               : 31
SUBSTRACT            : 5
THEN                 : 21 22 23 24 25 26
TIMES                : 7
TO                   : 11
TO_INT               : 1
error                : 

Nonterminals, with rules where they appear

data                 : 1 2 13 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 35 36 39 40
list                 : 32
list_term            : 36 37 38
math_term            : 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12
statement            : 33 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET

    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12
    NAME            shift and go to state 13
    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19

    statement                      shift and go to state 1
    data                           shift and go to state 3
    math_term                      shift and go to state 6
    list                           shift and go to state 17

state 1

    (0) S' -> statement .
    (33) data -> statement .

    EQUAL_TO        reduce using rule 33 (data -> statement .)
    MORE_THAN       reduce using rule 33 (data -> statement .)
    LESS_THAN       reduce using rule 33 (data -> statement .)
    MORE_OR_EQUAL   reduce using rule 33 (data -> statement .)
    LESS_OR_EQUAL   reduce using rule 33 (data -> statement .)
    NOT_EQUAL       reduce using rule 33 (data -> statement .)
    PLUS_SYMBOL     reduce using rule 33 (data -> statement .)
    MINUS_SYMBOL    reduce using rule 33 (data -> statement .)
    MULT_SYMBOL     reduce using rule 33 (data -> statement .)
    DIV_SYMBOL      reduce using rule 33 (data -> statement .)
    EXPO_SYMBOL     reduce using rule 33 (data -> statement .)


state 2

    (1) statement -> TO_INT . LPAREN data RPAREN

    LPAREN          shift and go to state 20


state 3

    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)


state 4

    (2) statement -> RECEIVE . LPAREN data RPAREN

    LPAREN          shift and go to state 27


state 5

    (3) statement -> ADD . math_term PLUS math_term
    (13) math_term -> . data
    (14) math_term -> . NAME
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME

    NAME            shift and go to state 30
    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    math_term                      shift and go to state 28
    data                           shift and go to state 29
    list                           shift and go to state 17
    statement                      shift and go to state 31

state 6

    (4) statement -> math_term . PLUS_SYMBOL math_term
    (6) statement -> math_term . MINUS_SYMBOL math_term
    (8) statement -> math_term . MULT_SYMBOL math_term
    (10) statement -> math_term . DIV_SYMBOL math_term
    (12) statement -> math_term . EXPO_SYMBOL math_term

    PLUS_SYMBOL     shift and go to state 32
    MINUS_SYMBOL    shift and go to state 33
    MULT_SYMBOL     shift and go to state 34
    DIV_SYMBOL      shift and go to state 35
    EXPO_SYMBOL     shift and go to state 36


state 7

    (5) statement -> SUBSTRACT . math_term MINUS math_term
    (13) math_term -> . data
    (14) math_term -> . NAME
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME

    NAME            shift and go to state 30
    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    math_term                      shift and go to state 37
    data                           shift and go to state 29
    list                           shift and go to state 17
    statement                      shift and go to state 31

state 8

    (7) statement -> MULTIPLY . math_term TIMES math_term
    (13) math_term -> . data
    (14) math_term -> . NAME
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME

    NAME            shift and go to state 30
    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    math_term                      shift and go to state 38
    data                           shift and go to state 29
    list                           shift and go to state 17
    statement                      shift and go to state 31

state 9

    (9) statement -> DIVIDE . math_term BY math_term
    (13) math_term -> . data
    (14) math_term -> . NAME
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME

    NAME            shift and go to state 30
    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    math_term                      shift and go to state 39
    data                           shift and go to state 29
    list                           shift and go to state 17
    statement                      shift and go to state 31

state 10

    (11) statement -> RAISE . math_term TO math_term
    (13) math_term -> . data
    (14) math_term -> . NAME
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME

    NAME            shift and go to state 30
    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    math_term                      shift and go to state 40
    data                           shift and go to state 29
    list                           shift and go to state 17
    statement                      shift and go to state 31

state 11

    (21) statement -> IF . data EQUAL_TO data THEN
    (22) statement -> IF . data MORE_THAN data THEN
    (23) statement -> IF . data LESS_THAN data THEN
    (24) statement -> IF . data MORE_OR_EQUAL data THEN
    (25) statement -> IF . data LESS_OR_EQUAL data THEN
    (26) statement -> IF . data NOT_EQUAL data THEN
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 41
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 12

    (27) statement -> SHOW . LPAREN data RPAREN
    (28) statement -> SHOW . LPAREN NAME RPAREN

    LPAREN          shift and go to state 43


state 13

    (39) statement -> NAME . IS data
    (40) statement -> NAME . EQUAL data
    (41) statement -> NAME .
    (14) math_term -> NAME .
    (34) data -> NAME .

  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for EQUAL_TO resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for MORE_THAN resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for MORE_OR_EQUAL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 14 (math_term -> NAME .)
    IS              shift and go to state 44
    EQUAL           shift and go to state 45
    $end            reduce using rule 41 (statement -> NAME .)
    PLUS_SYMBOL     reduce using rule 14 (math_term -> NAME .)
    MINUS_SYMBOL    reduce using rule 14 (math_term -> NAME .)
    MULT_SYMBOL     reduce using rule 14 (math_term -> NAME .)
    DIV_SYMBOL      reduce using rule 14 (math_term -> NAME .)
    EXPO_SYMBOL     reduce using rule 14 (math_term -> NAME .)
    EQUAL_TO        reduce using rule 34 (data -> NAME .)
    MORE_THAN       reduce using rule 34 (data -> NAME .)
    LESS_THAN       reduce using rule 34 (data -> NAME .)
    MORE_OR_EQUAL   reduce using rule 34 (data -> NAME .)
    LESS_OR_EQUAL   reduce using rule 34 (data -> NAME .)
    NOT_EQUAL       reduce using rule 34 (data -> NAME .)

  ! EQUAL_TO        [ reduce using rule 41 (statement -> NAME .) ]
  ! MORE_THAN       [ reduce using rule 41 (statement -> NAME .) ]
  ! LESS_THAN       [ reduce using rule 41 (statement -> NAME .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 41 (statement -> NAME .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 41 (statement -> NAME .) ]
  ! NOT_EQUAL       [ reduce using rule 41 (statement -> NAME .) ]
  ! PLUS_SYMBOL     [ reduce using rule 41 (statement -> NAME .) ]
  ! MINUS_SYMBOL    [ reduce using rule 41 (statement -> NAME .) ]
  ! MULT_SYMBOL     [ reduce using rule 41 (statement -> NAME .) ]
  ! DIV_SYMBOL      [ reduce using rule 41 (statement -> NAME .) ]
  ! EXPO_SYMBOL     [ reduce using rule 41 (statement -> NAME .) ]
  ! PLUS_SYMBOL     [ reduce using rule 34 (data -> NAME .) ]
  ! MINUS_SYMBOL    [ reduce using rule 34 (data -> NAME .) ]
  ! MULT_SYMBOL     [ reduce using rule 34 (data -> NAME .) ]
  ! DIV_SYMBOL      [ reduce using rule 34 (data -> NAME .) ]
  ! EXPO_SYMBOL     [ reduce using rule 34 (data -> NAME .) ]


state 14

    (29) data -> INT .

    EQUAL_TO        reduce using rule 29 (data -> INT .)
    MORE_THAN       reduce using rule 29 (data -> INT .)
    LESS_THAN       reduce using rule 29 (data -> INT .)
    MORE_OR_EQUAL   reduce using rule 29 (data -> INT .)
    LESS_OR_EQUAL   reduce using rule 29 (data -> INT .)
    NOT_EQUAL       reduce using rule 29 (data -> INT .)
    PLUS_SYMBOL     reduce using rule 29 (data -> INT .)
    MINUS_SYMBOL    reduce using rule 29 (data -> INT .)
    MULT_SYMBOL     reduce using rule 29 (data -> INT .)
    DIV_SYMBOL      reduce using rule 29 (data -> INT .)
    EXPO_SYMBOL     reduce using rule 29 (data -> INT .)
    PLUS            reduce using rule 29 (data -> INT .)
    MINUS           reduce using rule 29 (data -> INT .)
    TIMES           reduce using rule 29 (data -> INT .)
    BY              reduce using rule 29 (data -> INT .)
    TO              reduce using rule 29 (data -> INT .)
    COMMA           reduce using rule 29 (data -> INT .)
    RBRACKET        reduce using rule 29 (data -> INT .)
    RPAREN          reduce using rule 29 (data -> INT .)
    $end            reduce using rule 29 (data -> INT .)
    THEN            reduce using rule 29 (data -> INT .)


state 15

    (30) data -> DOUBLE .

    EQUAL_TO        reduce using rule 30 (data -> DOUBLE .)
    MORE_THAN       reduce using rule 30 (data -> DOUBLE .)
    LESS_THAN       reduce using rule 30 (data -> DOUBLE .)
    MORE_OR_EQUAL   reduce using rule 30 (data -> DOUBLE .)
    LESS_OR_EQUAL   reduce using rule 30 (data -> DOUBLE .)
    NOT_EQUAL       reduce using rule 30 (data -> DOUBLE .)
    PLUS_SYMBOL     reduce using rule 30 (data -> DOUBLE .)
    MINUS_SYMBOL    reduce using rule 30 (data -> DOUBLE .)
    MULT_SYMBOL     reduce using rule 30 (data -> DOUBLE .)
    DIV_SYMBOL      reduce using rule 30 (data -> DOUBLE .)
    EXPO_SYMBOL     reduce using rule 30 (data -> DOUBLE .)
    PLUS            reduce using rule 30 (data -> DOUBLE .)
    MINUS           reduce using rule 30 (data -> DOUBLE .)
    TIMES           reduce using rule 30 (data -> DOUBLE .)
    BY              reduce using rule 30 (data -> DOUBLE .)
    TO              reduce using rule 30 (data -> DOUBLE .)
    COMMA           reduce using rule 30 (data -> DOUBLE .)
    RBRACKET        reduce using rule 30 (data -> DOUBLE .)
    RPAREN          reduce using rule 30 (data -> DOUBLE .)
    $end            reduce using rule 30 (data -> DOUBLE .)
    THEN            reduce using rule 30 (data -> DOUBLE .)


state 16

    (31) data -> STRING .

    EQUAL_TO        reduce using rule 31 (data -> STRING .)
    MORE_THAN       reduce using rule 31 (data -> STRING .)
    LESS_THAN       reduce using rule 31 (data -> STRING .)
    MORE_OR_EQUAL   reduce using rule 31 (data -> STRING .)
    LESS_OR_EQUAL   reduce using rule 31 (data -> STRING .)
    NOT_EQUAL       reduce using rule 31 (data -> STRING .)
    PLUS_SYMBOL     reduce using rule 31 (data -> STRING .)
    MINUS_SYMBOL    reduce using rule 31 (data -> STRING .)
    MULT_SYMBOL     reduce using rule 31 (data -> STRING .)
    DIV_SYMBOL      reduce using rule 31 (data -> STRING .)
    EXPO_SYMBOL     reduce using rule 31 (data -> STRING .)
    PLUS            reduce using rule 31 (data -> STRING .)
    MINUS           reduce using rule 31 (data -> STRING .)
    TIMES           reduce using rule 31 (data -> STRING .)
    BY              reduce using rule 31 (data -> STRING .)
    TO              reduce using rule 31 (data -> STRING .)
    COMMA           reduce using rule 31 (data -> STRING .)
    RBRACKET        reduce using rule 31 (data -> STRING .)
    RPAREN          reduce using rule 31 (data -> STRING .)
    $end            reduce using rule 31 (data -> STRING .)
    THEN            reduce using rule 31 (data -> STRING .)


state 17

    (32) data -> list .

    EQUAL_TO        reduce using rule 32 (data -> list .)
    MORE_THAN       reduce using rule 32 (data -> list .)
    LESS_THAN       reduce using rule 32 (data -> list .)
    MORE_OR_EQUAL   reduce using rule 32 (data -> list .)
    LESS_OR_EQUAL   reduce using rule 32 (data -> list .)
    NOT_EQUAL       reduce using rule 32 (data -> list .)
    PLUS_SYMBOL     reduce using rule 32 (data -> list .)
    MINUS_SYMBOL    reduce using rule 32 (data -> list .)
    MULT_SYMBOL     reduce using rule 32 (data -> list .)
    DIV_SYMBOL      reduce using rule 32 (data -> list .)
    EXPO_SYMBOL     reduce using rule 32 (data -> list .)
    PLUS            reduce using rule 32 (data -> list .)
    MINUS           reduce using rule 32 (data -> list .)
    TIMES           reduce using rule 32 (data -> list .)
    BY              reduce using rule 32 (data -> list .)
    TO              reduce using rule 32 (data -> list .)
    COMMA           reduce using rule 32 (data -> list .)
    RBRACKET        reduce using rule 32 (data -> list .)
    RPAREN          reduce using rule 32 (data -> list .)
    $end            reduce using rule 32 (data -> list .)
    THEN            reduce using rule 32 (data -> list .)


state 18

    (37) list -> LIST . OF list_term

    OF              shift and go to state 46


state 19

    (38) list -> LBRACKET . list_term RBRACKET
    (35) list_term -> . data
    (36) list_term -> . data COMMA list_term
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    list_term                      shift and go to state 47
    data                           shift and go to state 48
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 20

    (1) statement -> TO_INT LPAREN . data RPAREN
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 49
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 21

    (15) statement -> data EQUAL_TO . data
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 50
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 22

    (16) statement -> data MORE_THAN . data
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 51
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 23

    (17) statement -> data LESS_THAN . data
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 52
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 24

    (18) statement -> data MORE_OR_EQUAL . data
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 53
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 25

    (19) statement -> data LESS_OR_EQUAL . data
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 54
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 26

    (20) statement -> data NOT_EQUAL . data
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 55
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 27

    (2) statement -> RECEIVE LPAREN . data RPAREN
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 56
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 28

    (3) statement -> ADD math_term . PLUS math_term
    (4) statement -> math_term . PLUS_SYMBOL math_term
    (6) statement -> math_term . MINUS_SYMBOL math_term
    (8) statement -> math_term . MULT_SYMBOL math_term
    (10) statement -> math_term . DIV_SYMBOL math_term
    (12) statement -> math_term . EXPO_SYMBOL math_term

    PLUS            shift and go to state 57
    PLUS_SYMBOL     shift and go to state 32
    MINUS_SYMBOL    shift and go to state 33
    MULT_SYMBOL     shift and go to state 34
    DIV_SYMBOL      shift and go to state 35
    EXPO_SYMBOL     shift and go to state 36


state 29

    (13) math_term -> data .
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data

  ! shift/reduce conflict for EQUAL_TO resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
    PLUS            reduce using rule 13 (math_term -> data .)
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS           reduce using rule 13 (math_term -> data .)
    TIMES           reduce using rule 13 (math_term -> data .)
    BY              reduce using rule 13 (math_term -> data .)
    TO              reduce using rule 13 (math_term -> data .)
    $end            reduce using rule 13 (math_term -> data .)
    COMMA           reduce using rule 13 (math_term -> data .)
    RBRACKET        reduce using rule 13 (math_term -> data .)
    RPAREN          reduce using rule 13 (math_term -> data .)
    THEN            reduce using rule 13 (math_term -> data .)
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26

  ! EQUAL_TO        [ reduce using rule 13 (math_term -> data .) ]
  ! MORE_THAN       [ reduce using rule 13 (math_term -> data .) ]
  ! LESS_THAN       [ reduce using rule 13 (math_term -> data .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 13 (math_term -> data .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 13 (math_term -> data .) ]
  ! NOT_EQUAL       [ reduce using rule 13 (math_term -> data .) ]


state 30

    (14) math_term -> NAME .
    (34) data -> NAME .
    (39) statement -> NAME . IS data
    (40) statement -> NAME . EQUAL data
    (41) statement -> NAME .

  ! reduce/reduce conflict for EQUAL_TO resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MORE_THAN resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MORE_OR_EQUAL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for PLUS resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MINUS resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for TIMES resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for BY resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for TO resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for COMMA resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for RPAREN resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for THEN resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for EQUAL_TO resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MORE_THAN resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MORE_OR_EQUAL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for PLUS resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MINUS resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for TIMES resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for BY resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for TO resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for COMMA resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for RPAREN resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for THEN resolved using rule 14 (math_term -> NAME .)
    PLUS            reduce using rule 14 (math_term -> NAME .)
    PLUS_SYMBOL     reduce using rule 14 (math_term -> NAME .)
    MINUS_SYMBOL    reduce using rule 14 (math_term -> NAME .)
    MULT_SYMBOL     reduce using rule 14 (math_term -> NAME .)
    DIV_SYMBOL      reduce using rule 14 (math_term -> NAME .)
    EXPO_SYMBOL     reduce using rule 14 (math_term -> NAME .)
    MINUS           reduce using rule 14 (math_term -> NAME .)
    TIMES           reduce using rule 14 (math_term -> NAME .)
    BY              reduce using rule 14 (math_term -> NAME .)
    TO              reduce using rule 14 (math_term -> NAME .)
    EQUAL_TO        reduce using rule 14 (math_term -> NAME .)
    MORE_THAN       reduce using rule 14 (math_term -> NAME .)
    LESS_THAN       reduce using rule 14 (math_term -> NAME .)
    MORE_OR_EQUAL   reduce using rule 14 (math_term -> NAME .)
    LESS_OR_EQUAL   reduce using rule 14 (math_term -> NAME .)
    NOT_EQUAL       reduce using rule 14 (math_term -> NAME .)
    $end            reduce using rule 14 (math_term -> NAME .)
    COMMA           reduce using rule 14 (math_term -> NAME .)
    RBRACKET        reduce using rule 14 (math_term -> NAME .)
    RPAREN          reduce using rule 14 (math_term -> NAME .)
    THEN            reduce using rule 14 (math_term -> NAME .)
    IS              shift and go to state 44
    EQUAL           shift and go to state 45

  ! EQUAL_TO        [ reduce using rule 34 (data -> NAME .) ]
  ! MORE_THAN       [ reduce using rule 34 (data -> NAME .) ]
  ! LESS_THAN       [ reduce using rule 34 (data -> NAME .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 34 (data -> NAME .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 34 (data -> NAME .) ]
  ! NOT_EQUAL       [ reduce using rule 34 (data -> NAME .) ]
  ! PLUS            [ reduce using rule 34 (data -> NAME .) ]
  ! PLUS_SYMBOL     [ reduce using rule 34 (data -> NAME .) ]
  ! MINUS_SYMBOL    [ reduce using rule 34 (data -> NAME .) ]
  ! MULT_SYMBOL     [ reduce using rule 34 (data -> NAME .) ]
  ! DIV_SYMBOL      [ reduce using rule 34 (data -> NAME .) ]
  ! EXPO_SYMBOL     [ reduce using rule 34 (data -> NAME .) ]
  ! MINUS           [ reduce using rule 34 (data -> NAME .) ]
  ! TIMES           [ reduce using rule 34 (data -> NAME .) ]
  ! BY              [ reduce using rule 34 (data -> NAME .) ]
  ! TO              [ reduce using rule 34 (data -> NAME .) ]
  ! $end            [ reduce using rule 34 (data -> NAME .) ]
  ! COMMA           [ reduce using rule 34 (data -> NAME .) ]
  ! RBRACKET        [ reduce using rule 34 (data -> NAME .) ]
  ! RPAREN          [ reduce using rule 34 (data -> NAME .) ]
  ! THEN            [ reduce using rule 34 (data -> NAME .) ]
  ! EQUAL_TO        [ reduce using rule 41 (statement -> NAME .) ]
  ! MORE_THAN       [ reduce using rule 41 (statement -> NAME .) ]
  ! LESS_THAN       [ reduce using rule 41 (statement -> NAME .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 41 (statement -> NAME .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 41 (statement -> NAME .) ]
  ! NOT_EQUAL       [ reduce using rule 41 (statement -> NAME .) ]
  ! PLUS            [ reduce using rule 41 (statement -> NAME .) ]
  ! PLUS_SYMBOL     [ reduce using rule 41 (statement -> NAME .) ]
  ! MINUS_SYMBOL    [ reduce using rule 41 (statement -> NAME .) ]
  ! MULT_SYMBOL     [ reduce using rule 41 (statement -> NAME .) ]
  ! DIV_SYMBOL      [ reduce using rule 41 (statement -> NAME .) ]
  ! EXPO_SYMBOL     [ reduce using rule 41 (statement -> NAME .) ]
  ! MINUS           [ reduce using rule 41 (statement -> NAME .) ]
  ! TIMES           [ reduce using rule 41 (statement -> NAME .) ]
  ! BY              [ reduce using rule 41 (statement -> NAME .) ]
  ! TO              [ reduce using rule 41 (statement -> NAME .) ]
  ! $end            [ reduce using rule 41 (statement -> NAME .) ]
  ! COMMA           [ reduce using rule 41 (statement -> NAME .) ]
  ! RBRACKET        [ reduce using rule 41 (statement -> NAME .) ]
  ! RPAREN          [ reduce using rule 41 (statement -> NAME .) ]
  ! THEN            [ reduce using rule 41 (statement -> NAME .) ]


state 31

    (33) data -> statement .

    EQUAL_TO        reduce using rule 33 (data -> statement .)
    MORE_THAN       reduce using rule 33 (data -> statement .)
    LESS_THAN       reduce using rule 33 (data -> statement .)
    MORE_OR_EQUAL   reduce using rule 33 (data -> statement .)
    LESS_OR_EQUAL   reduce using rule 33 (data -> statement .)
    NOT_EQUAL       reduce using rule 33 (data -> statement .)
    PLUS            reduce using rule 33 (data -> statement .)
    PLUS_SYMBOL     reduce using rule 33 (data -> statement .)
    MINUS_SYMBOL    reduce using rule 33 (data -> statement .)
    MULT_SYMBOL     reduce using rule 33 (data -> statement .)
    DIV_SYMBOL      reduce using rule 33 (data -> statement .)
    EXPO_SYMBOL     reduce using rule 33 (data -> statement .)
    MINUS           reduce using rule 33 (data -> statement .)
    TIMES           reduce using rule 33 (data -> statement .)
    BY              reduce using rule 33 (data -> statement .)
    TO              reduce using rule 33 (data -> statement .)
    COMMA           reduce using rule 33 (data -> statement .)
    RBRACKET        reduce using rule 33 (data -> statement .)
    RPAREN          reduce using rule 33 (data -> statement .)
    $end            reduce using rule 33 (data -> statement .)
    THEN            reduce using rule 33 (data -> statement .)


state 32

    (4) statement -> math_term PLUS_SYMBOL . math_term
    (13) math_term -> . data
    (14) math_term -> . NAME
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME

    NAME            shift and go to state 30
    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    math_term                      shift and go to state 58
    data                           shift and go to state 29
    list                           shift and go to state 17
    statement                      shift and go to state 31

state 33

    (6) statement -> math_term MINUS_SYMBOL . math_term
    (13) math_term -> . data
    (14) math_term -> . NAME
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME

    NAME            shift and go to state 30
    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    math_term                      shift and go to state 59
    data                           shift and go to state 29
    list                           shift and go to state 17
    statement                      shift and go to state 31

state 34

    (8) statement -> math_term MULT_SYMBOL . math_term
    (13) math_term -> . data
    (14) math_term -> . NAME
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME

    NAME            shift and go to state 30
    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    math_term                      shift and go to state 60
    data                           shift and go to state 29
    list                           shift and go to state 17
    statement                      shift and go to state 31

state 35

    (10) statement -> math_term DIV_SYMBOL . math_term
    (13) math_term -> . data
    (14) math_term -> . NAME
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME

    NAME            shift and go to state 30
    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    math_term                      shift and go to state 61
    data                           shift and go to state 29
    list                           shift and go to state 17
    statement                      shift and go to state 31

state 36

    (12) statement -> math_term EXPO_SYMBOL . math_term
    (13) math_term -> . data
    (14) math_term -> . NAME
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME

    NAME            shift and go to state 30
    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    math_term                      shift and go to state 62
    data                           shift and go to state 29
    list                           shift and go to state 17
    statement                      shift and go to state 31

state 37

    (5) statement -> SUBSTRACT math_term . MINUS math_term
    (4) statement -> math_term . PLUS_SYMBOL math_term
    (6) statement -> math_term . MINUS_SYMBOL math_term
    (8) statement -> math_term . MULT_SYMBOL math_term
    (10) statement -> math_term . DIV_SYMBOL math_term
    (12) statement -> math_term . EXPO_SYMBOL math_term

    MINUS           shift and go to state 63
    PLUS_SYMBOL     shift and go to state 32
    MINUS_SYMBOL    shift and go to state 33
    MULT_SYMBOL     shift and go to state 34
    DIV_SYMBOL      shift and go to state 35
    EXPO_SYMBOL     shift and go to state 36


state 38

    (7) statement -> MULTIPLY math_term . TIMES math_term
    (4) statement -> math_term . PLUS_SYMBOL math_term
    (6) statement -> math_term . MINUS_SYMBOL math_term
    (8) statement -> math_term . MULT_SYMBOL math_term
    (10) statement -> math_term . DIV_SYMBOL math_term
    (12) statement -> math_term . EXPO_SYMBOL math_term

    TIMES           shift and go to state 64
    PLUS_SYMBOL     shift and go to state 32
    MINUS_SYMBOL    shift and go to state 33
    MULT_SYMBOL     shift and go to state 34
    DIV_SYMBOL      shift and go to state 35
    EXPO_SYMBOL     shift and go to state 36


state 39

    (9) statement -> DIVIDE math_term . BY math_term
    (4) statement -> math_term . PLUS_SYMBOL math_term
    (6) statement -> math_term . MINUS_SYMBOL math_term
    (8) statement -> math_term . MULT_SYMBOL math_term
    (10) statement -> math_term . DIV_SYMBOL math_term
    (12) statement -> math_term . EXPO_SYMBOL math_term

    BY              shift and go to state 65
    PLUS_SYMBOL     shift and go to state 32
    MINUS_SYMBOL    shift and go to state 33
    MULT_SYMBOL     shift and go to state 34
    DIV_SYMBOL      shift and go to state 35
    EXPO_SYMBOL     shift and go to state 36


state 40

    (11) statement -> RAISE math_term . TO math_term
    (4) statement -> math_term . PLUS_SYMBOL math_term
    (6) statement -> math_term . MINUS_SYMBOL math_term
    (8) statement -> math_term . MULT_SYMBOL math_term
    (10) statement -> math_term . DIV_SYMBOL math_term
    (12) statement -> math_term . EXPO_SYMBOL math_term

    TO              shift and go to state 66
    PLUS_SYMBOL     shift and go to state 32
    MINUS_SYMBOL    shift and go to state 33
    MULT_SYMBOL     shift and go to state 34
    DIV_SYMBOL      shift and go to state 35
    EXPO_SYMBOL     shift and go to state 36


state 41

    (21) statement -> IF data . EQUAL_TO data THEN
    (22) statement -> IF data . MORE_THAN data THEN
    (23) statement -> IF data . LESS_THAN data THEN
    (24) statement -> IF data . MORE_OR_EQUAL data THEN
    (25) statement -> IF data . LESS_OR_EQUAL data THEN
    (26) statement -> IF data . NOT_EQUAL data THEN
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

    EQUAL_TO        shift and go to state 67
    MORE_THAN       shift and go to state 68
    LESS_THAN       shift and go to state 69
    MORE_OR_EQUAL   shift and go to state 70
    LESS_OR_EQUAL   shift and go to state 71
    NOT_EQUAL       shift and go to state 72
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)


state 42

    (34) data -> NAME .
    (39) statement -> NAME . IS data
    (40) statement -> NAME . EQUAL data
    (41) statement -> NAME .
    (14) math_term -> NAME .

  ! reduce/reduce conflict for EQUAL_TO resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for MORE_THAN resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for MORE_OR_EQUAL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for COMMA resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for RPAREN resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for PLUS resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for MINUS resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for TIMES resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for BY resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for TO resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for THEN resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 14 (math_term -> NAME .)
    EQUAL_TO        reduce using rule 34 (data -> NAME .)
    MORE_THAN       reduce using rule 34 (data -> NAME .)
    LESS_THAN       reduce using rule 34 (data -> NAME .)
    MORE_OR_EQUAL   reduce using rule 34 (data -> NAME .)
    LESS_OR_EQUAL   reduce using rule 34 (data -> NAME .)
    NOT_EQUAL       reduce using rule 34 (data -> NAME .)
    COMMA           reduce using rule 34 (data -> NAME .)
    RBRACKET        reduce using rule 34 (data -> NAME .)
    RPAREN          reduce using rule 34 (data -> NAME .)
    $end            reduce using rule 34 (data -> NAME .)
    PLUS            reduce using rule 34 (data -> NAME .)
    MINUS           reduce using rule 34 (data -> NAME .)
    TIMES           reduce using rule 34 (data -> NAME .)
    BY              reduce using rule 34 (data -> NAME .)
    TO              reduce using rule 34 (data -> NAME .)
    THEN            reduce using rule 34 (data -> NAME .)
    IS              shift and go to state 44
    EQUAL           shift and go to state 45
    PLUS_SYMBOL     reduce using rule 14 (math_term -> NAME .)
    MINUS_SYMBOL    reduce using rule 14 (math_term -> NAME .)
    MULT_SYMBOL     reduce using rule 14 (math_term -> NAME .)
    DIV_SYMBOL      reduce using rule 14 (math_term -> NAME .)
    EXPO_SYMBOL     reduce using rule 14 (math_term -> NAME .)

  ! PLUS_SYMBOL     [ reduce using rule 34 (data -> NAME .) ]
  ! MINUS_SYMBOL    [ reduce using rule 34 (data -> NAME .) ]
  ! MULT_SYMBOL     [ reduce using rule 34 (data -> NAME .) ]
  ! DIV_SYMBOL      [ reduce using rule 34 (data -> NAME .) ]
  ! EXPO_SYMBOL     [ reduce using rule 34 (data -> NAME .) ]
  ! EQUAL_TO        [ reduce using rule 41 (statement -> NAME .) ]
  ! MORE_THAN       [ reduce using rule 41 (statement -> NAME .) ]
  ! LESS_THAN       [ reduce using rule 41 (statement -> NAME .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 41 (statement -> NAME .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 41 (statement -> NAME .) ]
  ! NOT_EQUAL       [ reduce using rule 41 (statement -> NAME .) ]
  ! PLUS_SYMBOL     [ reduce using rule 41 (statement -> NAME .) ]
  ! MINUS_SYMBOL    [ reduce using rule 41 (statement -> NAME .) ]
  ! MULT_SYMBOL     [ reduce using rule 41 (statement -> NAME .) ]
  ! DIV_SYMBOL      [ reduce using rule 41 (statement -> NAME .) ]
  ! EXPO_SYMBOL     [ reduce using rule 41 (statement -> NAME .) ]
  ! COMMA           [ reduce using rule 41 (statement -> NAME .) ]
  ! RBRACKET        [ reduce using rule 41 (statement -> NAME .) ]
  ! RPAREN          [ reduce using rule 41 (statement -> NAME .) ]
  ! $end            [ reduce using rule 41 (statement -> NAME .) ]
  ! PLUS            [ reduce using rule 41 (statement -> NAME .) ]
  ! MINUS           [ reduce using rule 41 (statement -> NAME .) ]
  ! TIMES           [ reduce using rule 41 (statement -> NAME .) ]
  ! BY              [ reduce using rule 41 (statement -> NAME .) ]
  ! TO              [ reduce using rule 41 (statement -> NAME .) ]
  ! THEN            [ reduce using rule 41 (statement -> NAME .) ]


state 43

    (27) statement -> SHOW LPAREN . data RPAREN
    (28) statement -> SHOW LPAREN . NAME RPAREN
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    NAME            shift and go to state 74
    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 73
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 44

    (39) statement -> NAME IS . data
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 75
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 45

    (40) statement -> NAME EQUAL . data
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 76
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 46

    (37) list -> LIST OF . list_term
    (35) list_term -> . data
    (36) list_term -> . data COMMA list_term
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    list_term                      shift and go to state 77
    data                           shift and go to state 48
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 47

    (38) list -> LBRACKET list_term . RBRACKET

    RBRACKET        shift and go to state 78


state 48

    (35) list_term -> data .
    (36) list_term -> data . COMMA list_term
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for EQUAL_TO resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 13 (math_term -> data .)
    RBRACKET        reduce using rule 35 (list_term -> data .)
    $end            reduce using rule 35 (list_term -> data .)
    PLUS            reduce using rule 35 (list_term -> data .)
    MINUS           reduce using rule 35 (list_term -> data .)
    TIMES           reduce using rule 35 (list_term -> data .)
    BY              reduce using rule 35 (list_term -> data .)
    TO              reduce using rule 35 (list_term -> data .)
    RPAREN          reduce using rule 35 (list_term -> data .)
    THEN            reduce using rule 35 (list_term -> data .)
    COMMA           shift and go to state 79
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)

  ! EQUAL_TO        [ reduce using rule 35 (list_term -> data .) ]
  ! MORE_THAN       [ reduce using rule 35 (list_term -> data .) ]
  ! LESS_THAN       [ reduce using rule 35 (list_term -> data .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 35 (list_term -> data .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 35 (list_term -> data .) ]
  ! NOT_EQUAL       [ reduce using rule 35 (list_term -> data .) ]
  ! PLUS_SYMBOL     [ reduce using rule 35 (list_term -> data .) ]
  ! MINUS_SYMBOL    [ reduce using rule 35 (list_term -> data .) ]
  ! MULT_SYMBOL     [ reduce using rule 35 (list_term -> data .) ]
  ! DIV_SYMBOL      [ reduce using rule 35 (list_term -> data .) ]
  ! EXPO_SYMBOL     [ reduce using rule 35 (list_term -> data .) ]
  ! COMMA           [ reduce using rule 35 (list_term -> data .) ]


state 49

    (1) statement -> TO_INT LPAREN data . RPAREN
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

    RPAREN          shift and go to state 80
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)


state 50

    (15) statement -> data EQUAL_TO data .
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

  ! shift/reduce conflict for EQUAL_TO resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 13 (math_term -> data .)
    $end            reduce using rule 15 (statement -> data EQUAL_TO data .)
    PLUS            reduce using rule 15 (statement -> data EQUAL_TO data .)
    MINUS           reduce using rule 15 (statement -> data EQUAL_TO data .)
    TIMES           reduce using rule 15 (statement -> data EQUAL_TO data .)
    BY              reduce using rule 15 (statement -> data EQUAL_TO data .)
    TO              reduce using rule 15 (statement -> data EQUAL_TO data .)
    COMMA           reduce using rule 15 (statement -> data EQUAL_TO data .)
    RBRACKET        reduce using rule 15 (statement -> data EQUAL_TO data .)
    RPAREN          reduce using rule 15 (statement -> data EQUAL_TO data .)
    THEN            reduce using rule 15 (statement -> data EQUAL_TO data .)
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)

  ! EQUAL_TO        [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! MORE_THAN       [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! LESS_THAN       [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! NOT_EQUAL       [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! PLUS_SYMBOL     [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! MINUS_SYMBOL    [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! MULT_SYMBOL     [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! DIV_SYMBOL      [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! EXPO_SYMBOL     [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]


state 51

    (16) statement -> data MORE_THAN data .
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

  ! shift/reduce conflict for EQUAL_TO resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 13 (math_term -> data .)
    $end            reduce using rule 16 (statement -> data MORE_THAN data .)
    PLUS            reduce using rule 16 (statement -> data MORE_THAN data .)
    MINUS           reduce using rule 16 (statement -> data MORE_THAN data .)
    TIMES           reduce using rule 16 (statement -> data MORE_THAN data .)
    BY              reduce using rule 16 (statement -> data MORE_THAN data .)
    TO              reduce using rule 16 (statement -> data MORE_THAN data .)
    COMMA           reduce using rule 16 (statement -> data MORE_THAN data .)
    RBRACKET        reduce using rule 16 (statement -> data MORE_THAN data .)
    RPAREN          reduce using rule 16 (statement -> data MORE_THAN data .)
    THEN            reduce using rule 16 (statement -> data MORE_THAN data .)
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)

  ! EQUAL_TO        [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! MORE_THAN       [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! LESS_THAN       [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! NOT_EQUAL       [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! PLUS_SYMBOL     [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! MINUS_SYMBOL    [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! MULT_SYMBOL     [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! DIV_SYMBOL      [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! EXPO_SYMBOL     [ reduce using rule 16 (statement -> data MORE_THAN data .) ]


state 52

    (17) statement -> data LESS_THAN data .
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

  ! shift/reduce conflict for EQUAL_TO resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 13 (math_term -> data .)
    $end            reduce using rule 17 (statement -> data LESS_THAN data .)
    PLUS            reduce using rule 17 (statement -> data LESS_THAN data .)
    MINUS           reduce using rule 17 (statement -> data LESS_THAN data .)
    TIMES           reduce using rule 17 (statement -> data LESS_THAN data .)
    BY              reduce using rule 17 (statement -> data LESS_THAN data .)
    TO              reduce using rule 17 (statement -> data LESS_THAN data .)
    COMMA           reduce using rule 17 (statement -> data LESS_THAN data .)
    RBRACKET        reduce using rule 17 (statement -> data LESS_THAN data .)
    RPAREN          reduce using rule 17 (statement -> data LESS_THAN data .)
    THEN            reduce using rule 17 (statement -> data LESS_THAN data .)
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)

  ! EQUAL_TO        [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! MORE_THAN       [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! LESS_THAN       [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! NOT_EQUAL       [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! PLUS_SYMBOL     [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! MINUS_SYMBOL    [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! MULT_SYMBOL     [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! DIV_SYMBOL      [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! EXPO_SYMBOL     [ reduce using rule 17 (statement -> data LESS_THAN data .) ]


state 53

    (18) statement -> data MORE_OR_EQUAL data .
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

  ! shift/reduce conflict for EQUAL_TO resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 13 (math_term -> data .)
    $end            reduce using rule 18 (statement -> data MORE_OR_EQUAL data .)
    PLUS            reduce using rule 18 (statement -> data MORE_OR_EQUAL data .)
    MINUS           reduce using rule 18 (statement -> data MORE_OR_EQUAL data .)
    TIMES           reduce using rule 18 (statement -> data MORE_OR_EQUAL data .)
    BY              reduce using rule 18 (statement -> data MORE_OR_EQUAL data .)
    TO              reduce using rule 18 (statement -> data MORE_OR_EQUAL data .)
    COMMA           reduce using rule 18 (statement -> data MORE_OR_EQUAL data .)
    RBRACKET        reduce using rule 18 (statement -> data MORE_OR_EQUAL data .)
    RPAREN          reduce using rule 18 (statement -> data MORE_OR_EQUAL data .)
    THEN            reduce using rule 18 (statement -> data MORE_OR_EQUAL data .)
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)

  ! EQUAL_TO        [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! MORE_THAN       [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! LESS_THAN       [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! NOT_EQUAL       [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! PLUS_SYMBOL     [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! MINUS_SYMBOL    [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! MULT_SYMBOL     [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! DIV_SYMBOL      [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! EXPO_SYMBOL     [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]


state 54

    (19) statement -> data LESS_OR_EQUAL data .
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

  ! shift/reduce conflict for EQUAL_TO resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 13 (math_term -> data .)
    $end            reduce using rule 19 (statement -> data LESS_OR_EQUAL data .)
    PLUS            reduce using rule 19 (statement -> data LESS_OR_EQUAL data .)
    MINUS           reduce using rule 19 (statement -> data LESS_OR_EQUAL data .)
    TIMES           reduce using rule 19 (statement -> data LESS_OR_EQUAL data .)
    BY              reduce using rule 19 (statement -> data LESS_OR_EQUAL data .)
    TO              reduce using rule 19 (statement -> data LESS_OR_EQUAL data .)
    COMMA           reduce using rule 19 (statement -> data LESS_OR_EQUAL data .)
    RBRACKET        reduce using rule 19 (statement -> data LESS_OR_EQUAL data .)
    RPAREN          reduce using rule 19 (statement -> data LESS_OR_EQUAL data .)
    THEN            reduce using rule 19 (statement -> data LESS_OR_EQUAL data .)
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)

  ! EQUAL_TO        [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! MORE_THAN       [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! LESS_THAN       [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! NOT_EQUAL       [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! PLUS_SYMBOL     [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! MINUS_SYMBOL    [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! MULT_SYMBOL     [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! DIV_SYMBOL      [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! EXPO_SYMBOL     [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]


state 55

    (20) statement -> data NOT_EQUAL data .
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

  ! shift/reduce conflict for EQUAL_TO resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 13 (math_term -> data .)
    $end            reduce using rule 20 (statement -> data NOT_EQUAL data .)
    PLUS            reduce using rule 20 (statement -> data NOT_EQUAL data .)
    MINUS           reduce using rule 20 (statement -> data NOT_EQUAL data .)
    TIMES           reduce using rule 20 (statement -> data NOT_EQUAL data .)
    BY              reduce using rule 20 (statement -> data NOT_EQUAL data .)
    TO              reduce using rule 20 (statement -> data NOT_EQUAL data .)
    COMMA           reduce using rule 20 (statement -> data NOT_EQUAL data .)
    RBRACKET        reduce using rule 20 (statement -> data NOT_EQUAL data .)
    RPAREN          reduce using rule 20 (statement -> data NOT_EQUAL data .)
    THEN            reduce using rule 20 (statement -> data NOT_EQUAL data .)
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)

  ! EQUAL_TO        [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! MORE_THAN       [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! LESS_THAN       [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! NOT_EQUAL       [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! PLUS_SYMBOL     [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! MINUS_SYMBOL    [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! MULT_SYMBOL     [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! DIV_SYMBOL      [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! EXPO_SYMBOL     [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]


state 56

    (2) statement -> RECEIVE LPAREN data . RPAREN
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

    RPAREN          shift and go to state 81
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)


state 57

    (3) statement -> ADD math_term PLUS . math_term
    (13) math_term -> . data
    (14) math_term -> . NAME
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME

    NAME            shift and go to state 30
    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    math_term                      shift and go to state 82
    data                           shift and go to state 29
    list                           shift and go to state 17
    statement                      shift and go to state 31

state 58

    (4) statement -> math_term PLUS_SYMBOL math_term .
    (4) statement -> math_term . PLUS_SYMBOL math_term
    (6) statement -> math_term . MINUS_SYMBOL math_term
    (8) statement -> math_term . MULT_SYMBOL math_term
    (10) statement -> math_term . DIV_SYMBOL math_term
    (12) statement -> math_term . EXPO_SYMBOL math_term

  ! shift/reduce conflict for PLUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MINUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MULT_SYMBOL resolved as shift
  ! shift/reduce conflict for DIV_SYMBOL resolved as shift
  ! shift/reduce conflict for EXPO_SYMBOL resolved as shift
    $end            reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .)
    EQUAL_TO        reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .)
    MORE_THAN       reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .)
    LESS_THAN       reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .)
    MORE_OR_EQUAL   reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .)
    LESS_OR_EQUAL   reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .)
    NOT_EQUAL       reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .)
    PLUS            reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .)
    MINUS           reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .)
    TIMES           reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .)
    BY              reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .)
    TO              reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .)
    COMMA           reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .)
    RBRACKET        reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .)
    RPAREN          reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .)
    THEN            reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .)
    PLUS_SYMBOL     shift and go to state 32
    MINUS_SYMBOL    shift and go to state 33
    MULT_SYMBOL     shift and go to state 34
    DIV_SYMBOL      shift and go to state 35
    EXPO_SYMBOL     shift and go to state 36

  ! PLUS_SYMBOL     [ reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .) ]
  ! MINUS_SYMBOL    [ reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .) ]
  ! MULT_SYMBOL     [ reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .) ]
  ! DIV_SYMBOL      [ reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .) ]
  ! EXPO_SYMBOL     [ reduce using rule 4 (statement -> math_term PLUS_SYMBOL math_term .) ]


state 59

    (6) statement -> math_term MINUS_SYMBOL math_term .
    (4) statement -> math_term . PLUS_SYMBOL math_term
    (6) statement -> math_term . MINUS_SYMBOL math_term
    (8) statement -> math_term . MULT_SYMBOL math_term
    (10) statement -> math_term . DIV_SYMBOL math_term
    (12) statement -> math_term . EXPO_SYMBOL math_term

  ! shift/reduce conflict for PLUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MINUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MULT_SYMBOL resolved as shift
  ! shift/reduce conflict for DIV_SYMBOL resolved as shift
  ! shift/reduce conflict for EXPO_SYMBOL resolved as shift
    $end            reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .)
    EQUAL_TO        reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .)
    MORE_THAN       reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .)
    LESS_THAN       reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .)
    MORE_OR_EQUAL   reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .)
    LESS_OR_EQUAL   reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .)
    NOT_EQUAL       reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .)
    PLUS            reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .)
    MINUS           reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .)
    TIMES           reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .)
    BY              reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .)
    TO              reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .)
    COMMA           reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .)
    RBRACKET        reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .)
    RPAREN          reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .)
    THEN            reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .)
    PLUS_SYMBOL     shift and go to state 32
    MINUS_SYMBOL    shift and go to state 33
    MULT_SYMBOL     shift and go to state 34
    DIV_SYMBOL      shift and go to state 35
    EXPO_SYMBOL     shift and go to state 36

  ! PLUS_SYMBOL     [ reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .) ]
  ! MINUS_SYMBOL    [ reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .) ]
  ! MULT_SYMBOL     [ reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .) ]
  ! DIV_SYMBOL      [ reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .) ]
  ! EXPO_SYMBOL     [ reduce using rule 6 (statement -> math_term MINUS_SYMBOL math_term .) ]


state 60

    (8) statement -> math_term MULT_SYMBOL math_term .
    (4) statement -> math_term . PLUS_SYMBOL math_term
    (6) statement -> math_term . MINUS_SYMBOL math_term
    (8) statement -> math_term . MULT_SYMBOL math_term
    (10) statement -> math_term . DIV_SYMBOL math_term
    (12) statement -> math_term . EXPO_SYMBOL math_term

  ! shift/reduce conflict for PLUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MINUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MULT_SYMBOL resolved as shift
  ! shift/reduce conflict for DIV_SYMBOL resolved as shift
  ! shift/reduce conflict for EXPO_SYMBOL resolved as shift
    $end            reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .)
    EQUAL_TO        reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .)
    MORE_THAN       reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .)
    LESS_THAN       reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .)
    MORE_OR_EQUAL   reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .)
    LESS_OR_EQUAL   reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .)
    NOT_EQUAL       reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .)
    PLUS            reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .)
    MINUS           reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .)
    TIMES           reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .)
    BY              reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .)
    TO              reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .)
    COMMA           reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .)
    RBRACKET        reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .)
    RPAREN          reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .)
    THEN            reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .)
    PLUS_SYMBOL     shift and go to state 32
    MINUS_SYMBOL    shift and go to state 33
    MULT_SYMBOL     shift and go to state 34
    DIV_SYMBOL      shift and go to state 35
    EXPO_SYMBOL     shift and go to state 36

  ! PLUS_SYMBOL     [ reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .) ]
  ! MINUS_SYMBOL    [ reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .) ]
  ! MULT_SYMBOL     [ reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .) ]
  ! DIV_SYMBOL      [ reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .) ]
  ! EXPO_SYMBOL     [ reduce using rule 8 (statement -> math_term MULT_SYMBOL math_term .) ]


state 61

    (10) statement -> math_term DIV_SYMBOL math_term .
    (4) statement -> math_term . PLUS_SYMBOL math_term
    (6) statement -> math_term . MINUS_SYMBOL math_term
    (8) statement -> math_term . MULT_SYMBOL math_term
    (10) statement -> math_term . DIV_SYMBOL math_term
    (12) statement -> math_term . EXPO_SYMBOL math_term

  ! shift/reduce conflict for PLUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MINUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MULT_SYMBOL resolved as shift
  ! shift/reduce conflict for DIV_SYMBOL resolved as shift
  ! shift/reduce conflict for EXPO_SYMBOL resolved as shift
    $end            reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .)
    EQUAL_TO        reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .)
    MORE_THAN       reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .)
    LESS_THAN       reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .)
    MORE_OR_EQUAL   reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .)
    LESS_OR_EQUAL   reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .)
    NOT_EQUAL       reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .)
    PLUS            reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .)
    MINUS           reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .)
    TIMES           reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .)
    BY              reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .)
    TO              reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .)
    COMMA           reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .)
    RBRACKET        reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .)
    RPAREN          reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .)
    THEN            reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .)
    PLUS_SYMBOL     shift and go to state 32
    MINUS_SYMBOL    shift and go to state 33
    MULT_SYMBOL     shift and go to state 34
    DIV_SYMBOL      shift and go to state 35
    EXPO_SYMBOL     shift and go to state 36

  ! PLUS_SYMBOL     [ reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .) ]
  ! MINUS_SYMBOL    [ reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .) ]
  ! MULT_SYMBOL     [ reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .) ]
  ! DIV_SYMBOL      [ reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .) ]
  ! EXPO_SYMBOL     [ reduce using rule 10 (statement -> math_term DIV_SYMBOL math_term .) ]


state 62

    (12) statement -> math_term EXPO_SYMBOL math_term .
    (4) statement -> math_term . PLUS_SYMBOL math_term
    (6) statement -> math_term . MINUS_SYMBOL math_term
    (8) statement -> math_term . MULT_SYMBOL math_term
    (10) statement -> math_term . DIV_SYMBOL math_term
    (12) statement -> math_term . EXPO_SYMBOL math_term

  ! shift/reduce conflict for PLUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MINUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MULT_SYMBOL resolved as shift
  ! shift/reduce conflict for DIV_SYMBOL resolved as shift
  ! shift/reduce conflict for EXPO_SYMBOL resolved as shift
    $end            reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .)
    EQUAL_TO        reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .)
    MORE_THAN       reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .)
    LESS_THAN       reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .)
    MORE_OR_EQUAL   reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .)
    LESS_OR_EQUAL   reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .)
    NOT_EQUAL       reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .)
    PLUS            reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .)
    MINUS           reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .)
    TIMES           reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .)
    BY              reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .)
    TO              reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .)
    COMMA           reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .)
    RBRACKET        reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .)
    RPAREN          reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .)
    THEN            reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .)
    PLUS_SYMBOL     shift and go to state 32
    MINUS_SYMBOL    shift and go to state 33
    MULT_SYMBOL     shift and go to state 34
    DIV_SYMBOL      shift and go to state 35
    EXPO_SYMBOL     shift and go to state 36

  ! PLUS_SYMBOL     [ reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .) ]
  ! MINUS_SYMBOL    [ reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .) ]
  ! MULT_SYMBOL     [ reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .) ]
  ! DIV_SYMBOL      [ reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .) ]
  ! EXPO_SYMBOL     [ reduce using rule 12 (statement -> math_term EXPO_SYMBOL math_term .) ]


state 63

    (5) statement -> SUBSTRACT math_term MINUS . math_term
    (13) math_term -> . data
    (14) math_term -> . NAME
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME

    NAME            shift and go to state 30
    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    math_term                      shift and go to state 83
    data                           shift and go to state 29
    list                           shift and go to state 17
    statement                      shift and go to state 31

state 64

    (7) statement -> MULTIPLY math_term TIMES . math_term
    (13) math_term -> . data
    (14) math_term -> . NAME
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME

    NAME            shift and go to state 30
    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    math_term                      shift and go to state 84
    data                           shift and go to state 29
    list                           shift and go to state 17
    statement                      shift and go to state 31

state 65

    (9) statement -> DIVIDE math_term BY . math_term
    (13) math_term -> . data
    (14) math_term -> . NAME
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME

    NAME            shift and go to state 30
    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    math_term                      shift and go to state 85
    data                           shift and go to state 29
    list                           shift and go to state 17
    statement                      shift and go to state 31

state 66

    (11) statement -> RAISE math_term TO . math_term
    (13) math_term -> . data
    (14) math_term -> . NAME
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME

    NAME            shift and go to state 30
    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    math_term                      shift and go to state 86
    data                           shift and go to state 29
    list                           shift and go to state 17
    statement                      shift and go to state 31

state 67

    (21) statement -> IF data EQUAL_TO . data THEN
    (15) statement -> data EQUAL_TO . data
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 87
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 68

    (22) statement -> IF data MORE_THAN . data THEN
    (16) statement -> data MORE_THAN . data
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 88
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 69

    (23) statement -> IF data LESS_THAN . data THEN
    (17) statement -> data LESS_THAN . data
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 89
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 70

    (24) statement -> IF data MORE_OR_EQUAL . data THEN
    (18) statement -> data MORE_OR_EQUAL . data
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 90
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 71

    (25) statement -> IF data LESS_OR_EQUAL . data THEN
    (19) statement -> data LESS_OR_EQUAL . data
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 91
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 72

    (26) statement -> IF data NOT_EQUAL . data THEN
    (20) statement -> data NOT_EQUAL . data
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 92
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 73

    (27) statement -> SHOW LPAREN data . RPAREN
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

    RPAREN          shift and go to state 93
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)


state 74

    (28) statement -> SHOW LPAREN NAME . RPAREN
    (34) data -> NAME .
    (39) statement -> NAME . IS data
    (40) statement -> NAME . EQUAL data
    (41) statement -> NAME .
    (14) math_term -> NAME .

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
  ! reduce/reduce conflict for EQUAL_TO resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for MORE_THAN resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for MORE_OR_EQUAL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for LESS_OR_EQUAL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 34 (data -> NAME .)
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 14 (math_term -> NAME .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 14 (math_term -> NAME .)
    RPAREN          shift and go to state 94
    EQUAL_TO        reduce using rule 34 (data -> NAME .)
    MORE_THAN       reduce using rule 34 (data -> NAME .)
    LESS_THAN       reduce using rule 34 (data -> NAME .)
    MORE_OR_EQUAL   reduce using rule 34 (data -> NAME .)
    LESS_OR_EQUAL   reduce using rule 34 (data -> NAME .)
    NOT_EQUAL       reduce using rule 34 (data -> NAME .)
    IS              shift and go to state 44
    EQUAL           shift and go to state 45
    PLUS_SYMBOL     reduce using rule 14 (math_term -> NAME .)
    MINUS_SYMBOL    reduce using rule 14 (math_term -> NAME .)
    MULT_SYMBOL     reduce using rule 14 (math_term -> NAME .)
    DIV_SYMBOL      reduce using rule 14 (math_term -> NAME .)
    EXPO_SYMBOL     reduce using rule 14 (math_term -> NAME .)

  ! RPAREN          [ reduce using rule 34 (data -> NAME .) ]
  ! PLUS_SYMBOL     [ reduce using rule 34 (data -> NAME .) ]
  ! MINUS_SYMBOL    [ reduce using rule 34 (data -> NAME .) ]
  ! MULT_SYMBOL     [ reduce using rule 34 (data -> NAME .) ]
  ! DIV_SYMBOL      [ reduce using rule 34 (data -> NAME .) ]
  ! EXPO_SYMBOL     [ reduce using rule 34 (data -> NAME .) ]
  ! RPAREN          [ reduce using rule 41 (statement -> NAME .) ]
  ! EQUAL_TO        [ reduce using rule 41 (statement -> NAME .) ]
  ! MORE_THAN       [ reduce using rule 41 (statement -> NAME .) ]
  ! LESS_THAN       [ reduce using rule 41 (statement -> NAME .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 41 (statement -> NAME .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 41 (statement -> NAME .) ]
  ! NOT_EQUAL       [ reduce using rule 41 (statement -> NAME .) ]
  ! PLUS_SYMBOL     [ reduce using rule 41 (statement -> NAME .) ]
  ! MINUS_SYMBOL    [ reduce using rule 41 (statement -> NAME .) ]
  ! MULT_SYMBOL     [ reduce using rule 41 (statement -> NAME .) ]
  ! DIV_SYMBOL      [ reduce using rule 41 (statement -> NAME .) ]
  ! EXPO_SYMBOL     [ reduce using rule 41 (statement -> NAME .) ]


state 75

    (39) statement -> NAME IS data .
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

  ! shift/reduce conflict for EQUAL_TO resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 13 (math_term -> data .)
    $end            reduce using rule 39 (statement -> NAME IS data .)
    PLUS            reduce using rule 39 (statement -> NAME IS data .)
    MINUS           reduce using rule 39 (statement -> NAME IS data .)
    TIMES           reduce using rule 39 (statement -> NAME IS data .)
    BY              reduce using rule 39 (statement -> NAME IS data .)
    TO              reduce using rule 39 (statement -> NAME IS data .)
    COMMA           reduce using rule 39 (statement -> NAME IS data .)
    RBRACKET        reduce using rule 39 (statement -> NAME IS data .)
    RPAREN          reduce using rule 39 (statement -> NAME IS data .)
    THEN            reduce using rule 39 (statement -> NAME IS data .)
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)

  ! EQUAL_TO        [ reduce using rule 39 (statement -> NAME IS data .) ]
  ! MORE_THAN       [ reduce using rule 39 (statement -> NAME IS data .) ]
  ! LESS_THAN       [ reduce using rule 39 (statement -> NAME IS data .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 39 (statement -> NAME IS data .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 39 (statement -> NAME IS data .) ]
  ! NOT_EQUAL       [ reduce using rule 39 (statement -> NAME IS data .) ]
  ! PLUS_SYMBOL     [ reduce using rule 39 (statement -> NAME IS data .) ]
  ! MINUS_SYMBOL    [ reduce using rule 39 (statement -> NAME IS data .) ]
  ! MULT_SYMBOL     [ reduce using rule 39 (statement -> NAME IS data .) ]
  ! DIV_SYMBOL      [ reduce using rule 39 (statement -> NAME IS data .) ]
  ! EXPO_SYMBOL     [ reduce using rule 39 (statement -> NAME IS data .) ]


state 76

    (40) statement -> NAME EQUAL data .
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

  ! shift/reduce conflict for EQUAL_TO resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 13 (math_term -> data .)
    $end            reduce using rule 40 (statement -> NAME EQUAL data .)
    PLUS            reduce using rule 40 (statement -> NAME EQUAL data .)
    MINUS           reduce using rule 40 (statement -> NAME EQUAL data .)
    TIMES           reduce using rule 40 (statement -> NAME EQUAL data .)
    BY              reduce using rule 40 (statement -> NAME EQUAL data .)
    TO              reduce using rule 40 (statement -> NAME EQUAL data .)
    COMMA           reduce using rule 40 (statement -> NAME EQUAL data .)
    RBRACKET        reduce using rule 40 (statement -> NAME EQUAL data .)
    RPAREN          reduce using rule 40 (statement -> NAME EQUAL data .)
    THEN            reduce using rule 40 (statement -> NAME EQUAL data .)
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)

  ! EQUAL_TO        [ reduce using rule 40 (statement -> NAME EQUAL data .) ]
  ! MORE_THAN       [ reduce using rule 40 (statement -> NAME EQUAL data .) ]
  ! LESS_THAN       [ reduce using rule 40 (statement -> NAME EQUAL data .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 40 (statement -> NAME EQUAL data .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 40 (statement -> NAME EQUAL data .) ]
  ! NOT_EQUAL       [ reduce using rule 40 (statement -> NAME EQUAL data .) ]
  ! PLUS_SYMBOL     [ reduce using rule 40 (statement -> NAME EQUAL data .) ]
  ! MINUS_SYMBOL    [ reduce using rule 40 (statement -> NAME EQUAL data .) ]
  ! MULT_SYMBOL     [ reduce using rule 40 (statement -> NAME EQUAL data .) ]
  ! DIV_SYMBOL      [ reduce using rule 40 (statement -> NAME EQUAL data .) ]
  ! EXPO_SYMBOL     [ reduce using rule 40 (statement -> NAME EQUAL data .) ]


state 77

    (37) list -> LIST OF list_term .

    EQUAL_TO        reduce using rule 37 (list -> LIST OF list_term .)
    MORE_THAN       reduce using rule 37 (list -> LIST OF list_term .)
    LESS_THAN       reduce using rule 37 (list -> LIST OF list_term .)
    MORE_OR_EQUAL   reduce using rule 37 (list -> LIST OF list_term .)
    LESS_OR_EQUAL   reduce using rule 37 (list -> LIST OF list_term .)
    NOT_EQUAL       reduce using rule 37 (list -> LIST OF list_term .)
    PLUS_SYMBOL     reduce using rule 37 (list -> LIST OF list_term .)
    MINUS_SYMBOL    reduce using rule 37 (list -> LIST OF list_term .)
    MULT_SYMBOL     reduce using rule 37 (list -> LIST OF list_term .)
    DIV_SYMBOL      reduce using rule 37 (list -> LIST OF list_term .)
    EXPO_SYMBOL     reduce using rule 37 (list -> LIST OF list_term .)
    PLUS            reduce using rule 37 (list -> LIST OF list_term .)
    MINUS           reduce using rule 37 (list -> LIST OF list_term .)
    TIMES           reduce using rule 37 (list -> LIST OF list_term .)
    BY              reduce using rule 37 (list -> LIST OF list_term .)
    TO              reduce using rule 37 (list -> LIST OF list_term .)
    COMMA           reduce using rule 37 (list -> LIST OF list_term .)
    RBRACKET        reduce using rule 37 (list -> LIST OF list_term .)
    RPAREN          reduce using rule 37 (list -> LIST OF list_term .)
    $end            reduce using rule 37 (list -> LIST OF list_term .)
    THEN            reduce using rule 37 (list -> LIST OF list_term .)


state 78

    (38) list -> LBRACKET list_term RBRACKET .

    EQUAL_TO        reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    MORE_THAN       reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    LESS_THAN       reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    MORE_OR_EQUAL   reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    LESS_OR_EQUAL   reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    NOT_EQUAL       reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    PLUS_SYMBOL     reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    MINUS_SYMBOL    reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    MULT_SYMBOL     reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    DIV_SYMBOL      reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    EXPO_SYMBOL     reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    PLUS            reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    MINUS           reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    TIMES           reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    BY              reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    TO              reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    COMMA           reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    RBRACKET        reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    RPAREN          reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    $end            reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)
    THEN            reduce using rule 38 (list -> LBRACKET list_term RBRACKET .)


state 79

    (36) list_term -> data COMMA . list_term
    (35) list_term -> . data
    (36) list_term -> . data COMMA list_term
    (29) data -> . INT
    (30) data -> . DOUBLE
    (31) data -> . STRING
    (32) data -> . list
    (33) data -> . statement
    (34) data -> . NAME
    (37) list -> . LIST OF list_term
    (38) list -> . LBRACKET list_term RBRACKET
    (1) statement -> . TO_INT LPAREN data RPAREN
    (2) statement -> . RECEIVE LPAREN data RPAREN
    (3) statement -> . ADD math_term PLUS math_term
    (4) statement -> . math_term PLUS_SYMBOL math_term
    (5) statement -> . SUBSTRACT math_term MINUS math_term
    (6) statement -> . math_term MINUS_SYMBOL math_term
    (7) statement -> . MULTIPLY math_term TIMES math_term
    (8) statement -> . math_term MULT_SYMBOL math_term
    (9) statement -> . DIVIDE math_term BY math_term
    (10) statement -> . math_term DIV_SYMBOL math_term
    (11) statement -> . RAISE math_term TO math_term
    (12) statement -> . math_term EXPO_SYMBOL math_term
    (15) statement -> . data EQUAL_TO data
    (16) statement -> . data MORE_THAN data
    (17) statement -> . data LESS_THAN data
    (18) statement -> . data MORE_OR_EQUAL data
    (19) statement -> . data LESS_OR_EQUAL data
    (20) statement -> . data NOT_EQUAL data
    (21) statement -> . IF data EQUAL_TO data THEN
    (22) statement -> . IF data MORE_THAN data THEN
    (23) statement -> . IF data LESS_THAN data THEN
    (24) statement -> . IF data MORE_OR_EQUAL data THEN
    (25) statement -> . IF data LESS_OR_EQUAL data THEN
    (26) statement -> . IF data NOT_EQUAL data THEN
    (27) statement -> . SHOW LPAREN data RPAREN
    (28) statement -> . SHOW LPAREN NAME RPAREN
    (39) statement -> . NAME IS data
    (40) statement -> . NAME EQUAL data
    (41) statement -> . NAME
    (13) math_term -> . data
    (14) math_term -> . NAME

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    NAME            shift and go to state 42
    LIST            shift and go to state 18
    LBRACKET        shift and go to state 19
    TO_INT          shift and go to state 2
    RECEIVE         shift and go to state 4
    ADD             shift and go to state 5
    SUBSTRACT       shift and go to state 7
    MULTIPLY        shift and go to state 8
    DIVIDE          shift and go to state 9
    RAISE           shift and go to state 10
    IF              shift and go to state 11
    SHOW            shift and go to state 12

    data                           shift and go to state 48
    list_term                      shift and go to state 95
    list                           shift and go to state 17
    statement                      shift and go to state 31
    math_term                      shift and go to state 6

state 80

    (1) statement -> TO_INT LPAREN data RPAREN .

    $end            reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    EQUAL_TO        reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    MORE_THAN       reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    LESS_THAN       reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    MORE_OR_EQUAL   reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    LESS_OR_EQUAL   reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    NOT_EQUAL       reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    PLUS_SYMBOL     reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    MINUS_SYMBOL    reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    MULT_SYMBOL     reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    DIV_SYMBOL      reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    EXPO_SYMBOL     reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    PLUS            reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    MINUS           reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    TIMES           reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    BY              reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    TO              reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    COMMA           reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    RBRACKET        reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    RPAREN          reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)
    THEN            reduce using rule 1 (statement -> TO_INT LPAREN data RPAREN .)


state 81

    (2) statement -> RECEIVE LPAREN data RPAREN .

    $end            reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    EQUAL_TO        reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    MORE_THAN       reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    LESS_THAN       reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    MORE_OR_EQUAL   reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    LESS_OR_EQUAL   reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    NOT_EQUAL       reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    PLUS_SYMBOL     reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    MINUS_SYMBOL    reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    MULT_SYMBOL     reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    DIV_SYMBOL      reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    EXPO_SYMBOL     reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    PLUS            reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    MINUS           reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    TIMES           reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    BY              reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    TO              reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    COMMA           reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    RBRACKET        reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    RPAREN          reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)
    THEN            reduce using rule 2 (statement -> RECEIVE LPAREN data RPAREN .)


state 82

    (3) statement -> ADD math_term PLUS math_term .
    (4) statement -> math_term . PLUS_SYMBOL math_term
    (6) statement -> math_term . MINUS_SYMBOL math_term
    (8) statement -> math_term . MULT_SYMBOL math_term
    (10) statement -> math_term . DIV_SYMBOL math_term
    (12) statement -> math_term . EXPO_SYMBOL math_term

  ! shift/reduce conflict for PLUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MINUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MULT_SYMBOL resolved as shift
  ! shift/reduce conflict for DIV_SYMBOL resolved as shift
  ! shift/reduce conflict for EXPO_SYMBOL resolved as shift
    $end            reduce using rule 3 (statement -> ADD math_term PLUS math_term .)
    EQUAL_TO        reduce using rule 3 (statement -> ADD math_term PLUS math_term .)
    MORE_THAN       reduce using rule 3 (statement -> ADD math_term PLUS math_term .)
    LESS_THAN       reduce using rule 3 (statement -> ADD math_term PLUS math_term .)
    MORE_OR_EQUAL   reduce using rule 3 (statement -> ADD math_term PLUS math_term .)
    LESS_OR_EQUAL   reduce using rule 3 (statement -> ADD math_term PLUS math_term .)
    NOT_EQUAL       reduce using rule 3 (statement -> ADD math_term PLUS math_term .)
    PLUS            reduce using rule 3 (statement -> ADD math_term PLUS math_term .)
    MINUS           reduce using rule 3 (statement -> ADD math_term PLUS math_term .)
    TIMES           reduce using rule 3 (statement -> ADD math_term PLUS math_term .)
    BY              reduce using rule 3 (statement -> ADD math_term PLUS math_term .)
    TO              reduce using rule 3 (statement -> ADD math_term PLUS math_term .)
    COMMA           reduce using rule 3 (statement -> ADD math_term PLUS math_term .)
    RBRACKET        reduce using rule 3 (statement -> ADD math_term PLUS math_term .)
    RPAREN          reduce using rule 3 (statement -> ADD math_term PLUS math_term .)
    THEN            reduce using rule 3 (statement -> ADD math_term PLUS math_term .)
    PLUS_SYMBOL     shift and go to state 32
    MINUS_SYMBOL    shift and go to state 33
    MULT_SYMBOL     shift and go to state 34
    DIV_SYMBOL      shift and go to state 35
    EXPO_SYMBOL     shift and go to state 36

  ! PLUS_SYMBOL     [ reduce using rule 3 (statement -> ADD math_term PLUS math_term .) ]
  ! MINUS_SYMBOL    [ reduce using rule 3 (statement -> ADD math_term PLUS math_term .) ]
  ! MULT_SYMBOL     [ reduce using rule 3 (statement -> ADD math_term PLUS math_term .) ]
  ! DIV_SYMBOL      [ reduce using rule 3 (statement -> ADD math_term PLUS math_term .) ]
  ! EXPO_SYMBOL     [ reduce using rule 3 (statement -> ADD math_term PLUS math_term .) ]


state 83

    (5) statement -> SUBSTRACT math_term MINUS math_term .
    (4) statement -> math_term . PLUS_SYMBOL math_term
    (6) statement -> math_term . MINUS_SYMBOL math_term
    (8) statement -> math_term . MULT_SYMBOL math_term
    (10) statement -> math_term . DIV_SYMBOL math_term
    (12) statement -> math_term . EXPO_SYMBOL math_term

  ! shift/reduce conflict for PLUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MINUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MULT_SYMBOL resolved as shift
  ! shift/reduce conflict for DIV_SYMBOL resolved as shift
  ! shift/reduce conflict for EXPO_SYMBOL resolved as shift
    $end            reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .)
    EQUAL_TO        reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .)
    MORE_THAN       reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .)
    LESS_THAN       reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .)
    MORE_OR_EQUAL   reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .)
    LESS_OR_EQUAL   reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .)
    NOT_EQUAL       reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .)
    PLUS            reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .)
    MINUS           reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .)
    TIMES           reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .)
    BY              reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .)
    TO              reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .)
    COMMA           reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .)
    RBRACKET        reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .)
    RPAREN          reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .)
    THEN            reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .)
    PLUS_SYMBOL     shift and go to state 32
    MINUS_SYMBOL    shift and go to state 33
    MULT_SYMBOL     shift and go to state 34
    DIV_SYMBOL      shift and go to state 35
    EXPO_SYMBOL     shift and go to state 36

  ! PLUS_SYMBOL     [ reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .) ]
  ! MINUS_SYMBOL    [ reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .) ]
  ! MULT_SYMBOL     [ reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .) ]
  ! DIV_SYMBOL      [ reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .) ]
  ! EXPO_SYMBOL     [ reduce using rule 5 (statement -> SUBSTRACT math_term MINUS math_term .) ]


state 84

    (7) statement -> MULTIPLY math_term TIMES math_term .
    (4) statement -> math_term . PLUS_SYMBOL math_term
    (6) statement -> math_term . MINUS_SYMBOL math_term
    (8) statement -> math_term . MULT_SYMBOL math_term
    (10) statement -> math_term . DIV_SYMBOL math_term
    (12) statement -> math_term . EXPO_SYMBOL math_term

  ! shift/reduce conflict for PLUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MINUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MULT_SYMBOL resolved as shift
  ! shift/reduce conflict for DIV_SYMBOL resolved as shift
  ! shift/reduce conflict for EXPO_SYMBOL resolved as shift
    $end            reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .)
    EQUAL_TO        reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .)
    MORE_THAN       reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .)
    LESS_THAN       reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .)
    MORE_OR_EQUAL   reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .)
    LESS_OR_EQUAL   reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .)
    NOT_EQUAL       reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .)
    PLUS            reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .)
    MINUS           reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .)
    TIMES           reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .)
    BY              reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .)
    TO              reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .)
    COMMA           reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .)
    RBRACKET        reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .)
    RPAREN          reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .)
    THEN            reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .)
    PLUS_SYMBOL     shift and go to state 32
    MINUS_SYMBOL    shift and go to state 33
    MULT_SYMBOL     shift and go to state 34
    DIV_SYMBOL      shift and go to state 35
    EXPO_SYMBOL     shift and go to state 36

  ! PLUS_SYMBOL     [ reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .) ]
  ! MINUS_SYMBOL    [ reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .) ]
  ! MULT_SYMBOL     [ reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .) ]
  ! DIV_SYMBOL      [ reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .) ]
  ! EXPO_SYMBOL     [ reduce using rule 7 (statement -> MULTIPLY math_term TIMES math_term .) ]


state 85

    (9) statement -> DIVIDE math_term BY math_term .
    (4) statement -> math_term . PLUS_SYMBOL math_term
    (6) statement -> math_term . MINUS_SYMBOL math_term
    (8) statement -> math_term . MULT_SYMBOL math_term
    (10) statement -> math_term . DIV_SYMBOL math_term
    (12) statement -> math_term . EXPO_SYMBOL math_term

  ! shift/reduce conflict for PLUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MINUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MULT_SYMBOL resolved as shift
  ! shift/reduce conflict for DIV_SYMBOL resolved as shift
  ! shift/reduce conflict for EXPO_SYMBOL resolved as shift
    $end            reduce using rule 9 (statement -> DIVIDE math_term BY math_term .)
    EQUAL_TO        reduce using rule 9 (statement -> DIVIDE math_term BY math_term .)
    MORE_THAN       reduce using rule 9 (statement -> DIVIDE math_term BY math_term .)
    LESS_THAN       reduce using rule 9 (statement -> DIVIDE math_term BY math_term .)
    MORE_OR_EQUAL   reduce using rule 9 (statement -> DIVIDE math_term BY math_term .)
    LESS_OR_EQUAL   reduce using rule 9 (statement -> DIVIDE math_term BY math_term .)
    NOT_EQUAL       reduce using rule 9 (statement -> DIVIDE math_term BY math_term .)
    PLUS            reduce using rule 9 (statement -> DIVIDE math_term BY math_term .)
    MINUS           reduce using rule 9 (statement -> DIVIDE math_term BY math_term .)
    TIMES           reduce using rule 9 (statement -> DIVIDE math_term BY math_term .)
    BY              reduce using rule 9 (statement -> DIVIDE math_term BY math_term .)
    TO              reduce using rule 9 (statement -> DIVIDE math_term BY math_term .)
    COMMA           reduce using rule 9 (statement -> DIVIDE math_term BY math_term .)
    RBRACKET        reduce using rule 9 (statement -> DIVIDE math_term BY math_term .)
    RPAREN          reduce using rule 9 (statement -> DIVIDE math_term BY math_term .)
    THEN            reduce using rule 9 (statement -> DIVIDE math_term BY math_term .)
    PLUS_SYMBOL     shift and go to state 32
    MINUS_SYMBOL    shift and go to state 33
    MULT_SYMBOL     shift and go to state 34
    DIV_SYMBOL      shift and go to state 35
    EXPO_SYMBOL     shift and go to state 36

  ! PLUS_SYMBOL     [ reduce using rule 9 (statement -> DIVIDE math_term BY math_term .) ]
  ! MINUS_SYMBOL    [ reduce using rule 9 (statement -> DIVIDE math_term BY math_term .) ]
  ! MULT_SYMBOL     [ reduce using rule 9 (statement -> DIVIDE math_term BY math_term .) ]
  ! DIV_SYMBOL      [ reduce using rule 9 (statement -> DIVIDE math_term BY math_term .) ]
  ! EXPO_SYMBOL     [ reduce using rule 9 (statement -> DIVIDE math_term BY math_term .) ]


state 86

    (11) statement -> RAISE math_term TO math_term .
    (4) statement -> math_term . PLUS_SYMBOL math_term
    (6) statement -> math_term . MINUS_SYMBOL math_term
    (8) statement -> math_term . MULT_SYMBOL math_term
    (10) statement -> math_term . DIV_SYMBOL math_term
    (12) statement -> math_term . EXPO_SYMBOL math_term

  ! shift/reduce conflict for PLUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MINUS_SYMBOL resolved as shift
  ! shift/reduce conflict for MULT_SYMBOL resolved as shift
  ! shift/reduce conflict for DIV_SYMBOL resolved as shift
  ! shift/reduce conflict for EXPO_SYMBOL resolved as shift
    $end            reduce using rule 11 (statement -> RAISE math_term TO math_term .)
    EQUAL_TO        reduce using rule 11 (statement -> RAISE math_term TO math_term .)
    MORE_THAN       reduce using rule 11 (statement -> RAISE math_term TO math_term .)
    LESS_THAN       reduce using rule 11 (statement -> RAISE math_term TO math_term .)
    MORE_OR_EQUAL   reduce using rule 11 (statement -> RAISE math_term TO math_term .)
    LESS_OR_EQUAL   reduce using rule 11 (statement -> RAISE math_term TO math_term .)
    NOT_EQUAL       reduce using rule 11 (statement -> RAISE math_term TO math_term .)
    PLUS            reduce using rule 11 (statement -> RAISE math_term TO math_term .)
    MINUS           reduce using rule 11 (statement -> RAISE math_term TO math_term .)
    TIMES           reduce using rule 11 (statement -> RAISE math_term TO math_term .)
    BY              reduce using rule 11 (statement -> RAISE math_term TO math_term .)
    TO              reduce using rule 11 (statement -> RAISE math_term TO math_term .)
    COMMA           reduce using rule 11 (statement -> RAISE math_term TO math_term .)
    RBRACKET        reduce using rule 11 (statement -> RAISE math_term TO math_term .)
    RPAREN          reduce using rule 11 (statement -> RAISE math_term TO math_term .)
    THEN            reduce using rule 11 (statement -> RAISE math_term TO math_term .)
    PLUS_SYMBOL     shift and go to state 32
    MINUS_SYMBOL    shift and go to state 33
    MULT_SYMBOL     shift and go to state 34
    DIV_SYMBOL      shift and go to state 35
    EXPO_SYMBOL     shift and go to state 36

  ! PLUS_SYMBOL     [ reduce using rule 11 (statement -> RAISE math_term TO math_term .) ]
  ! MINUS_SYMBOL    [ reduce using rule 11 (statement -> RAISE math_term TO math_term .) ]
  ! MULT_SYMBOL     [ reduce using rule 11 (statement -> RAISE math_term TO math_term .) ]
  ! DIV_SYMBOL      [ reduce using rule 11 (statement -> RAISE math_term TO math_term .) ]
  ! EXPO_SYMBOL     [ reduce using rule 11 (statement -> RAISE math_term TO math_term .) ]


state 87

    (21) statement -> IF data EQUAL_TO data . THEN
    (15) statement -> data EQUAL_TO data .
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

  ! shift/reduce conflict for EQUAL_TO resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 13 (math_term -> data .)
    THEN            shift and go to state 96
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)

  ! EQUAL_TO        [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! MORE_THAN       [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! LESS_THAN       [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! NOT_EQUAL       [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! PLUS_SYMBOL     [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! MINUS_SYMBOL    [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! MULT_SYMBOL     [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! DIV_SYMBOL      [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]
  ! EXPO_SYMBOL     [ reduce using rule 15 (statement -> data EQUAL_TO data .) ]


state 88

    (22) statement -> IF data MORE_THAN data . THEN
    (16) statement -> data MORE_THAN data .
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

  ! shift/reduce conflict for EQUAL_TO resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 13 (math_term -> data .)
    THEN            shift and go to state 97
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)

  ! EQUAL_TO        [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! MORE_THAN       [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! LESS_THAN       [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! NOT_EQUAL       [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! PLUS_SYMBOL     [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! MINUS_SYMBOL    [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! MULT_SYMBOL     [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! DIV_SYMBOL      [ reduce using rule 16 (statement -> data MORE_THAN data .) ]
  ! EXPO_SYMBOL     [ reduce using rule 16 (statement -> data MORE_THAN data .) ]


state 89

    (23) statement -> IF data LESS_THAN data . THEN
    (17) statement -> data LESS_THAN data .
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

  ! shift/reduce conflict for EQUAL_TO resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 13 (math_term -> data .)
    THEN            shift and go to state 98
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)

  ! EQUAL_TO        [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! MORE_THAN       [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! LESS_THAN       [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! NOT_EQUAL       [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! PLUS_SYMBOL     [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! MINUS_SYMBOL    [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! MULT_SYMBOL     [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! DIV_SYMBOL      [ reduce using rule 17 (statement -> data LESS_THAN data .) ]
  ! EXPO_SYMBOL     [ reduce using rule 17 (statement -> data LESS_THAN data .) ]


state 90

    (24) statement -> IF data MORE_OR_EQUAL data . THEN
    (18) statement -> data MORE_OR_EQUAL data .
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

  ! shift/reduce conflict for EQUAL_TO resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 13 (math_term -> data .)
    THEN            shift and go to state 99
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)

  ! EQUAL_TO        [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! MORE_THAN       [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! LESS_THAN       [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! NOT_EQUAL       [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! PLUS_SYMBOL     [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! MINUS_SYMBOL    [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! MULT_SYMBOL     [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! DIV_SYMBOL      [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]
  ! EXPO_SYMBOL     [ reduce using rule 18 (statement -> data MORE_OR_EQUAL data .) ]


state 91

    (25) statement -> IF data LESS_OR_EQUAL data . THEN
    (19) statement -> data LESS_OR_EQUAL data .
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

  ! shift/reduce conflict for EQUAL_TO resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 13 (math_term -> data .)
    THEN            shift and go to state 100
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)

  ! EQUAL_TO        [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! MORE_THAN       [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! LESS_THAN       [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! NOT_EQUAL       [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! PLUS_SYMBOL     [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! MINUS_SYMBOL    [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! MULT_SYMBOL     [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! DIV_SYMBOL      [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]
  ! EXPO_SYMBOL     [ reduce using rule 19 (statement -> data LESS_OR_EQUAL data .) ]


state 92

    (26) statement -> IF data NOT_EQUAL data . THEN
    (20) statement -> data NOT_EQUAL data .
    (15) statement -> data . EQUAL_TO data
    (16) statement -> data . MORE_THAN data
    (17) statement -> data . LESS_THAN data
    (18) statement -> data . MORE_OR_EQUAL data
    (19) statement -> data . LESS_OR_EQUAL data
    (20) statement -> data . NOT_EQUAL data
    (13) math_term -> data .

  ! shift/reduce conflict for EQUAL_TO resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_OR_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! reduce/reduce conflict for PLUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MINUS_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for MULT_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for DIV_SYMBOL resolved using rule 13 (math_term -> data .)
  ! reduce/reduce conflict for EXPO_SYMBOL resolved using rule 13 (math_term -> data .)
    THEN            shift and go to state 101
    EQUAL_TO        shift and go to state 21
    MORE_THAN       shift and go to state 22
    LESS_THAN       shift and go to state 23
    MORE_OR_EQUAL   shift and go to state 24
    LESS_OR_EQUAL   shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    PLUS_SYMBOL     reduce using rule 13 (math_term -> data .)
    MINUS_SYMBOL    reduce using rule 13 (math_term -> data .)
    MULT_SYMBOL     reduce using rule 13 (math_term -> data .)
    DIV_SYMBOL      reduce using rule 13 (math_term -> data .)
    EXPO_SYMBOL     reduce using rule 13 (math_term -> data .)

  ! EQUAL_TO        [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! MORE_THAN       [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! LESS_THAN       [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! MORE_OR_EQUAL   [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! LESS_OR_EQUAL   [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! NOT_EQUAL       [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! PLUS_SYMBOL     [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! MINUS_SYMBOL    [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! MULT_SYMBOL     [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! DIV_SYMBOL      [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]
  ! EXPO_SYMBOL     [ reduce using rule 20 (statement -> data NOT_EQUAL data .) ]


state 93

    (27) statement -> SHOW LPAREN data RPAREN .

    $end            reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    EQUAL_TO        reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    MORE_THAN       reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    LESS_THAN       reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    MORE_OR_EQUAL   reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    LESS_OR_EQUAL   reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    NOT_EQUAL       reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    PLUS_SYMBOL     reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    MINUS_SYMBOL    reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    MULT_SYMBOL     reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    DIV_SYMBOL      reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    EXPO_SYMBOL     reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    PLUS            reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    MINUS           reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    TIMES           reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    BY              reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    TO              reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    COMMA           reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    RBRACKET        reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    RPAREN          reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)
    THEN            reduce using rule 27 (statement -> SHOW LPAREN data RPAREN .)


state 94

    (28) statement -> SHOW LPAREN NAME RPAREN .

    $end            reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    EQUAL_TO        reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    MORE_THAN       reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    LESS_THAN       reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    MORE_OR_EQUAL   reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    LESS_OR_EQUAL   reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    NOT_EQUAL       reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    PLUS_SYMBOL     reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    MINUS_SYMBOL    reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    MULT_SYMBOL     reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    DIV_SYMBOL      reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    EXPO_SYMBOL     reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    PLUS            reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    MINUS           reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    TIMES           reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    BY              reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    TO              reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    COMMA           reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    RBRACKET        reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)
    THEN            reduce using rule 28 (statement -> SHOW LPAREN NAME RPAREN .)


state 95

    (36) list_term -> data COMMA list_term .

    RBRACKET        reduce using rule 36 (list_term -> data COMMA list_term .)
    EQUAL_TO        reduce using rule 36 (list_term -> data COMMA list_term .)
    MORE_THAN       reduce using rule 36 (list_term -> data COMMA list_term .)
    LESS_THAN       reduce using rule 36 (list_term -> data COMMA list_term .)
    MORE_OR_EQUAL   reduce using rule 36 (list_term -> data COMMA list_term .)
    LESS_OR_EQUAL   reduce using rule 36 (list_term -> data COMMA list_term .)
    NOT_EQUAL       reduce using rule 36 (list_term -> data COMMA list_term .)
    $end            reduce using rule 36 (list_term -> data COMMA list_term .)
    PLUS_SYMBOL     reduce using rule 36 (list_term -> data COMMA list_term .)
    MINUS_SYMBOL    reduce using rule 36 (list_term -> data COMMA list_term .)
    MULT_SYMBOL     reduce using rule 36 (list_term -> data COMMA list_term .)
    DIV_SYMBOL      reduce using rule 36 (list_term -> data COMMA list_term .)
    EXPO_SYMBOL     reduce using rule 36 (list_term -> data COMMA list_term .)
    PLUS            reduce using rule 36 (list_term -> data COMMA list_term .)
    MINUS           reduce using rule 36 (list_term -> data COMMA list_term .)
    TIMES           reduce using rule 36 (list_term -> data COMMA list_term .)
    BY              reduce using rule 36 (list_term -> data COMMA list_term .)
    TO              reduce using rule 36 (list_term -> data COMMA list_term .)
    COMMA           reduce using rule 36 (list_term -> data COMMA list_term .)
    RPAREN          reduce using rule 36 (list_term -> data COMMA list_term .)
    THEN            reduce using rule 36 (list_term -> data COMMA list_term .)


state 96

    (21) statement -> IF data EQUAL_TO data THEN .

    $end            reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    EQUAL_TO        reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    MORE_THAN       reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    LESS_THAN       reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    MORE_OR_EQUAL   reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    LESS_OR_EQUAL   reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    NOT_EQUAL       reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    PLUS_SYMBOL     reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    MINUS_SYMBOL    reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    MULT_SYMBOL     reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    DIV_SYMBOL      reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    EXPO_SYMBOL     reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    PLUS            reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    MINUS           reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    TIMES           reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    BY              reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    TO              reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    COMMA           reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    RBRACKET        reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    RPAREN          reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)
    THEN            reduce using rule 21 (statement -> IF data EQUAL_TO data THEN .)


state 97

    (22) statement -> IF data MORE_THAN data THEN .

    $end            reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    EQUAL_TO        reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    MORE_THAN       reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    LESS_THAN       reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    MORE_OR_EQUAL   reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    LESS_OR_EQUAL   reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    NOT_EQUAL       reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    PLUS_SYMBOL     reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    MINUS_SYMBOL    reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    MULT_SYMBOL     reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    DIV_SYMBOL      reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    EXPO_SYMBOL     reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    PLUS            reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    MINUS           reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    TIMES           reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    BY              reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    TO              reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    COMMA           reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    RBRACKET        reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    RPAREN          reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)
    THEN            reduce using rule 22 (statement -> IF data MORE_THAN data THEN .)


state 98

    (23) statement -> IF data LESS_THAN data THEN .

    $end            reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    EQUAL_TO        reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    MORE_THAN       reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    LESS_THAN       reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    MORE_OR_EQUAL   reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    LESS_OR_EQUAL   reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    NOT_EQUAL       reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    PLUS_SYMBOL     reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    MINUS_SYMBOL    reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    MULT_SYMBOL     reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    DIV_SYMBOL      reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    EXPO_SYMBOL     reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    PLUS            reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    MINUS           reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    TIMES           reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    BY              reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    TO              reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    COMMA           reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    RBRACKET        reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    RPAREN          reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)
    THEN            reduce using rule 23 (statement -> IF data LESS_THAN data THEN .)


state 99

    (24) statement -> IF data MORE_OR_EQUAL data THEN .

    $end            reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    EQUAL_TO        reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    MORE_THAN       reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    LESS_THAN       reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    MORE_OR_EQUAL   reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    LESS_OR_EQUAL   reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    NOT_EQUAL       reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    PLUS_SYMBOL     reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    MINUS_SYMBOL    reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    MULT_SYMBOL     reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    DIV_SYMBOL      reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    EXPO_SYMBOL     reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    PLUS            reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    MINUS           reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    TIMES           reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    BY              reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    TO              reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    COMMA           reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    RBRACKET        reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    RPAREN          reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)
    THEN            reduce using rule 24 (statement -> IF data MORE_OR_EQUAL data THEN .)


state 100

    (25) statement -> IF data LESS_OR_EQUAL data THEN .

    $end            reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    EQUAL_TO        reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    MORE_THAN       reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    LESS_THAN       reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    MORE_OR_EQUAL   reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    LESS_OR_EQUAL   reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    NOT_EQUAL       reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    PLUS_SYMBOL     reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    MINUS_SYMBOL    reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    MULT_SYMBOL     reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    DIV_SYMBOL      reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    EXPO_SYMBOL     reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    PLUS            reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    MINUS           reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    TIMES           reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    BY              reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    TO              reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    COMMA           reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    RBRACKET        reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    RPAREN          reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)
    THEN            reduce using rule 25 (statement -> IF data LESS_OR_EQUAL data THEN .)


state 101

    (26) statement -> IF data NOT_EQUAL data THEN .

    $end            reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    EQUAL_TO        reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    MORE_THAN       reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    LESS_THAN       reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    MORE_OR_EQUAL   reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    LESS_OR_EQUAL   reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    NOT_EQUAL       reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    PLUS_SYMBOL     reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    MINUS_SYMBOL    reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    MULT_SYMBOL     reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    DIV_SYMBOL      reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    EXPO_SYMBOL     reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    PLUS            reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    MINUS           reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    TIMES           reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    BY              reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    TO              reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    COMMA           reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    RBRACKET        reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    RPAREN          reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)
    THEN            reduce using rule 26 (statement -> IF data NOT_EQUAL data THEN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQUAL_TO in state 29 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 29 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 29 resolved as shift
WARNING: shift/reduce conflict for MORE_OR_EQUAL in state 29 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 29 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 29 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 48 resolved as shift
WARNING: shift/reduce conflict for EQUAL_TO in state 48 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 48 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 48 resolved as shift
WARNING: shift/reduce conflict for MORE_OR_EQUAL in state 48 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 48 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 48 resolved as shift
WARNING: shift/reduce conflict for EQUAL_TO in state 50 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 50 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 50 resolved as shift
WARNING: shift/reduce conflict for MORE_OR_EQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for EQUAL_TO in state 51 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 51 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 51 resolved as shift
WARNING: shift/reduce conflict for MORE_OR_EQUAL in state 51 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 51 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 51 resolved as shift
WARNING: shift/reduce conflict for EQUAL_TO in state 52 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 52 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 52 resolved as shift
WARNING: shift/reduce conflict for MORE_OR_EQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for EQUAL_TO in state 53 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 53 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 53 resolved as shift
WARNING: shift/reduce conflict for MORE_OR_EQUAL in state 53 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 53 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 53 resolved as shift
WARNING: shift/reduce conflict for EQUAL_TO in state 54 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 54 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 54 resolved as shift
WARNING: shift/reduce conflict for MORE_OR_EQUAL in state 54 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 54 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 54 resolved as shift
WARNING: shift/reduce conflict for EQUAL_TO in state 55 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 55 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 55 resolved as shift
WARNING: shift/reduce conflict for MORE_OR_EQUAL in state 55 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 55 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 55 resolved as shift
WARNING: shift/reduce conflict for PLUS_SYMBOL in state 58 resolved as shift
WARNING: shift/reduce conflict for MINUS_SYMBOL in state 58 resolved as shift
WARNING: shift/reduce conflict for MULT_SYMBOL in state 58 resolved as shift
WARNING: shift/reduce conflict for DIV_SYMBOL in state 58 resolved as shift
WARNING: shift/reduce conflict for EXPO_SYMBOL in state 58 resolved as shift
WARNING: shift/reduce conflict for PLUS_SYMBOL in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS_SYMBOL in state 59 resolved as shift
WARNING: shift/reduce conflict for MULT_SYMBOL in state 59 resolved as shift
WARNING: shift/reduce conflict for DIV_SYMBOL in state 59 resolved as shift
WARNING: shift/reduce conflict for EXPO_SYMBOL in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS_SYMBOL in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS_SYMBOL in state 60 resolved as shift
WARNING: shift/reduce conflict for MULT_SYMBOL in state 60 resolved as shift
WARNING: shift/reduce conflict for DIV_SYMBOL in state 60 resolved as shift
WARNING: shift/reduce conflict for EXPO_SYMBOL in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS_SYMBOL in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS_SYMBOL in state 61 resolved as shift
WARNING: shift/reduce conflict for MULT_SYMBOL in state 61 resolved as shift
WARNING: shift/reduce conflict for DIV_SYMBOL in state 61 resolved as shift
WARNING: shift/reduce conflict for EXPO_SYMBOL in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS_SYMBOL in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS_SYMBOL in state 62 resolved as shift
WARNING: shift/reduce conflict for MULT_SYMBOL in state 62 resolved as shift
WARNING: shift/reduce conflict for DIV_SYMBOL in state 62 resolved as shift
WARNING: shift/reduce conflict for EXPO_SYMBOL in state 62 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 74 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 74 resolved as shift
WARNING: shift/reduce conflict for EQUAL_TO in state 75 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 75 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 75 resolved as shift
WARNING: shift/reduce conflict for MORE_OR_EQUAL in state 75 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 75 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 75 resolved as shift
WARNING: shift/reduce conflict for EQUAL_TO in state 76 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 76 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 76 resolved as shift
WARNING: shift/reduce conflict for MORE_OR_EQUAL in state 76 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 76 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS_SYMBOL in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS_SYMBOL in state 82 resolved as shift
WARNING: shift/reduce conflict for MULT_SYMBOL in state 82 resolved as shift
WARNING: shift/reduce conflict for DIV_SYMBOL in state 82 resolved as shift
WARNING: shift/reduce conflict for EXPO_SYMBOL in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS_SYMBOL in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS_SYMBOL in state 83 resolved as shift
WARNING: shift/reduce conflict for MULT_SYMBOL in state 83 resolved as shift
WARNING: shift/reduce conflict for DIV_SYMBOL in state 83 resolved as shift
WARNING: shift/reduce conflict for EXPO_SYMBOL in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS_SYMBOL in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS_SYMBOL in state 84 resolved as shift
WARNING: shift/reduce conflict for MULT_SYMBOL in state 84 resolved as shift
WARNING: shift/reduce conflict for DIV_SYMBOL in state 84 resolved as shift
WARNING: shift/reduce conflict for EXPO_SYMBOL in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS_SYMBOL in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS_SYMBOL in state 85 resolved as shift
WARNING: shift/reduce conflict for MULT_SYMBOL in state 85 resolved as shift
WARNING: shift/reduce conflict for DIV_SYMBOL in state 85 resolved as shift
WARNING: shift/reduce conflict for EXPO_SYMBOL in state 85 resolved as shift
WARNING: shift/reduce conflict for PLUS_SYMBOL in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS_SYMBOL in state 86 resolved as shift
WARNING: shift/reduce conflict for MULT_SYMBOL in state 86 resolved as shift
WARNING: shift/reduce conflict for DIV_SYMBOL in state 86 resolved as shift
WARNING: shift/reduce conflict for EXPO_SYMBOL in state 86 resolved as shift
WARNING: shift/reduce conflict for EQUAL_TO in state 87 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 87 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 87 resolved as shift
WARNING: shift/reduce conflict for MORE_OR_EQUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for EQUAL_TO in state 88 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 88 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 88 resolved as shift
WARNING: shift/reduce conflict for MORE_OR_EQUAL in state 88 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 88 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 88 resolved as shift
WARNING: shift/reduce conflict for EQUAL_TO in state 89 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 89 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 89 resolved as shift
WARNING: shift/reduce conflict for MORE_OR_EQUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for EQUAL_TO in state 90 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 90 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 90 resolved as shift
WARNING: shift/reduce conflict for MORE_OR_EQUAL in state 90 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 90 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 90 resolved as shift
WARNING: shift/reduce conflict for EQUAL_TO in state 91 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 91 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 91 resolved as shift
WARNING: shift/reduce conflict for MORE_OR_EQUAL in state 91 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 91 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 91 resolved as shift
WARNING: shift/reduce conflict for EQUAL_TO in state 92 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 92 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 92 resolved as shift
WARNING: shift/reduce conflict for MORE_OR_EQUAL in state 92 resolved as shift
WARNING: shift/reduce conflict for LESS_OR_EQUAL in state 92 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 92 resolved as shift
WARNING: reduce/reduce conflict in state 13 resolved using rule (math_term -> NAME)
WARNING: rejected rule (statement -> NAME) in state 13
WARNING: reduce/reduce conflict in state 13 resolved using rule (data -> NAME)
WARNING: rejected rule (statement -> NAME) in state 13
WARNING: reduce/reduce conflict in state 13 resolved using rule (math_term -> NAME)
WARNING: rejected rule (data -> NAME) in state 13
WARNING: reduce/reduce conflict in state 30 resolved using rule (math_term -> NAME)
WARNING: rejected rule (data -> NAME) in state 30
WARNING: reduce/reduce conflict in state 30 resolved using rule (math_term -> NAME)
WARNING: rejected rule (statement -> NAME) in state 30
WARNING: reduce/reduce conflict in state 42 resolved using rule (data -> NAME)
WARNING: rejected rule (statement -> NAME) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (math_term -> NAME)
WARNING: rejected rule (data -> NAME) in state 42
WARNING: reduce/reduce conflict in state 48 resolved using rule (math_term -> data)
WARNING: rejected rule (list_term -> data) in state 48
WARNING: reduce/reduce conflict in state 50 resolved using rule (math_term -> data)
WARNING: rejected rule (statement -> data EQUAL_TO data) in state 50
WARNING: reduce/reduce conflict in state 51 resolved using rule (math_term -> data)
WARNING: rejected rule (statement -> data MORE_THAN data) in state 51
WARNING: reduce/reduce conflict in state 52 resolved using rule (math_term -> data)
WARNING: rejected rule (statement -> data LESS_THAN data) in state 52
WARNING: reduce/reduce conflict in state 53 resolved using rule (math_term -> data)
WARNING: rejected rule (statement -> data MORE_OR_EQUAL data) in state 53
WARNING: reduce/reduce conflict in state 54 resolved using rule (math_term -> data)
WARNING: rejected rule (statement -> data LESS_OR_EQUAL data) in state 54
WARNING: reduce/reduce conflict in state 55 resolved using rule (math_term -> data)
WARNING: rejected rule (statement -> data NOT_EQUAL data) in state 55
WARNING: reduce/reduce conflict in state 74 resolved using rule (data -> NAME)
WARNING: rejected rule (statement -> NAME) in state 74
WARNING: reduce/reduce conflict in state 74 resolved using rule (math_term -> NAME)
WARNING: rejected rule (data -> NAME) in state 74
WARNING: reduce/reduce conflict in state 75 resolved using rule (math_term -> data)
WARNING: rejected rule (statement -> NAME IS data) in state 75
WARNING: reduce/reduce conflict in state 76 resolved using rule (math_term -> data)
WARNING: rejected rule (statement -> NAME EQUAL data) in state 76
WARNING: reduce/reduce conflict in state 87 resolved using rule (math_term -> data)
WARNING: rejected rule (statement -> data EQUAL_TO data) in state 87
WARNING: reduce/reduce conflict in state 88 resolved using rule (math_term -> data)
WARNING: rejected rule (statement -> data MORE_THAN data) in state 88
WARNING: reduce/reduce conflict in state 89 resolved using rule (math_term -> data)
WARNING: rejected rule (statement -> data LESS_THAN data) in state 89
WARNING: reduce/reduce conflict in state 90 resolved using rule (math_term -> data)
WARNING: rejected rule (statement -> data MORE_OR_EQUAL data) in state 90
WARNING: reduce/reduce conflict in state 91 resolved using rule (math_term -> data)
WARNING: rejected rule (statement -> data LESS_OR_EQUAL data) in state 91
WARNING: reduce/reduce conflict in state 92 resolved using rule (math_term -> data)
WARNING: rejected rule (statement -> data NOT_EQUAL data) in state 92
