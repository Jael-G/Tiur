
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND BY COMMA DIVIDE DIV_SYMBOL DOUBLE EQUAL EXPO_SYMBOL INT IS LBRACKET LIST LPAREN MINUS MINUS_SYMBOL MULTIPLY MULT_SYMBOL NAME OF PLUS PLUS_SYMBOL RAISE RBRACKET RECEIVE RPAREN SHOW STRING SUBSTRACT TIMES TOstatement : RECEIVE LPAREN data RPARENstatement : ADD data PLUS math_Term\n               | data PLUS_SYMBOL math_Termstatement : SUBSTRACT data MINUS math_Term\n               | data MINUS_SYMBOL math_Termstatement : MULTIPLY data TIMES math_Term\n               | data MULT_SYMBOL math_Termstatement : DIVIDE data BY math_Term\n               | data DIV_SYMBOL math_Termstatement : RAISE data TO math_Term\n               | data EXPO_SYMBOL math_Termmath_Term : datastatement : SHOW LPAREN data RPAREN\n  |  SHOW LPAREN NAME RPARENdata : INT\n          | DOUBLE\n          | STRING\n          | list\n          | statementlist_term : data\n          | data COMMA list_termlist :  LIST OF list_term\n          | LBRACKET list_term RBRACKETstatement : NAME IS data\n               | NAME EQUAL datastatement : NAME'
    
_lr_action_items = {'RECEIVE':([0,4,5,6,7,8,16,17,18,19,20,21,22,29,30,31,32,42,43,44,45,46,53,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'ADD':([0,4,5,6,7,8,16,17,18,19,20,21,22,29,30,31,32,42,43,44,45,46,53,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'SUBSTRACT':([0,4,5,6,7,8,16,17,18,19,20,21,22,29,30,31,32,42,43,44,45,46,53,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'MULTIPLY':([0,4,5,6,7,8,16,17,18,19,20,21,22,29,30,31,32,42,43,44,45,46,53,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'DIVIDE':([0,4,5,6,7,8,16,17,18,19,20,21,22,29,30,31,32,42,43,44,45,46,53,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'RAISE':([0,4,5,6,7,8,16,17,18,19,20,21,22,29,30,31,32,42,43,44,45,46,53,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'SHOW':([0,4,5,6,7,8,16,17,18,19,20,21,22,29,30,31,32,42,43,44,45,46,53,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'NAME':([0,4,5,6,7,8,16,17,18,19,20,21,22,29,30,31,32,42,43,44,45,46,53,],[10,10,10,10,10,10,10,10,10,10,10,10,10,48,10,10,10,10,10,10,10,10,10,]),'INT':([0,4,5,6,7,8,16,17,18,19,20,21,22,29,30,31,32,42,43,44,45,46,53,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'DOUBLE':([0,4,5,6,7,8,16,17,18,19,20,21,22,29,30,31,32,42,43,44,45,46,53,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'STRING':([0,4,5,6,7,8,16,17,18,19,20,21,22,29,30,31,32,42,43,44,45,46,53,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'LIST':([0,4,5,6,7,8,16,17,18,19,20,21,22,29,30,31,32,42,43,44,45,46,53,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'LBRACKET':([0,4,5,6,7,8,16,17,18,19,20,21,22,29,30,31,32,42,43,44,45,46,53,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'$end':([1,10,11,12,13,14,24,34,36,37,38,39,40,41,49,50,51,52,54,55,56,57,58,59,60,61,62,],[0,-26,-15,-16,-17,-18,-19,-20,-12,-3,-5,-7,-9,-11,-24,-25,-22,-23,-1,-2,-4,-6,-8,-10,-13,-14,-21,]),'PLUS_SYMBOL':([1,3,10,11,12,13,14,23,24,25,26,27,28,34,35,36,37,38,39,40,41,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,],[-19,18,-26,-15,-16,-17,-18,18,-19,18,18,18,18,18,18,18,-3,-5,-7,-9,-11,18,-26,18,18,-22,-23,-1,-2,-4,-6,-8,-10,-13,-14,-21,]),'MINUS_SYMBOL':([1,3,10,11,12,13,14,23,24,25,26,27,28,34,35,36,37,38,39,40,41,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,],[-19,19,-26,-15,-16,-17,-18,19,-19,19,19,19,19,19,19,19,-3,-5,-7,-9,-11,19,-26,19,19,-22,-23,-1,-2,-4,-6,-8,-10,-13,-14,-21,]),'MULT_SYMBOL':([1,3,10,11,12,13,14,23,24,25,26,27,28,34,35,36,37,38,39,40,41,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,],[-19,20,-26,-15,-16,-17,-18,20,-19,20,20,20,20,20,20,20,-3,-5,-7,-9,-11,20,-26,20,20,-22,-23,-1,-2,-4,-6,-8,-10,-13,-14,-21,]),'DIV_SYMBOL':([1,3,10,11,12,13,14,23,24,25,26,27,28,34,35,36,37,38,39,40,41,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,],[-19,21,-26,-15,-16,-17,-18,21,-19,21,21,21,21,21,21,21,-3,-5,-7,-9,-11,21,-26,21,21,-22,-23,-1,-2,-4,-6,-8,-10,-13,-14,-21,]),'EXPO_SYMBOL':([1,3,10,11,12,13,14,23,24,25,26,27,28,34,35,36,37,38,39,40,41,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,],[-19,22,-26,-15,-16,-17,-18,22,-19,22,22,22,22,22,22,22,-3,-5,-7,-9,-11,22,-26,22,22,-22,-23,-1,-2,-4,-6,-8,-10,-13,-14,-21,]),'LPAREN':([2,9,],[17,29,]),'IS':([10,48,],[30,30,]),'EQUAL':([10,48,],[31,31,]),'PLUS':([10,11,12,13,14,23,24,34,36,37,38,39,40,41,49,50,51,52,54,55,56,57,58,59,60,61,62,],[-26,-15,-16,-17,-18,42,-19,-20,-12,-3,-5,-7,-9,-11,-24,-25,-22,-23,-1,-2,-4,-6,-8,-10,-13,-14,-21,]),'MINUS':([10,11,12,13,14,24,25,34,36,37,38,39,40,41,49,50,51,52,54,55,56,57,58,59,60,61,62,],[-26,-15,-16,-17,-18,-19,43,-20,-12,-3,-5,-7,-9,-11,-24,-25,-22,-23,-1,-2,-4,-6,-8,-10,-13,-14,-21,]),'TIMES':([10,11,12,13,14,24,26,34,36,37,38,39,40,41,49,50,51,52,54,55,56,57,58,59,60,61,62,],[-26,-15,-16,-17,-18,-19,44,-20,-12,-3,-5,-7,-9,-11,-24,-25,-22,-23,-1,-2,-4,-6,-8,-10,-13,-14,-21,]),'BY':([10,11,12,13,14,24,27,34,36,37,38,39,40,41,49,50,51,52,54,55,56,57,58,59,60,61,62,],[-26,-15,-16,-17,-18,-19,45,-20,-12,-3,-5,-7,-9,-11,-24,-25,-22,-23,-1,-2,-4,-6,-8,-10,-13,-14,-21,]),'TO':([10,11,12,13,14,24,28,34,36,37,38,39,40,41,49,50,51,52,54,55,56,57,58,59,60,61,62,],[-26,-15,-16,-17,-18,-19,46,-20,-12,-3,-5,-7,-9,-11,-24,-25,-22,-23,-1,-2,-4,-6,-8,-10,-13,-14,-21,]),'COMMA':([10,11,12,13,14,24,34,36,37,38,39,40,41,49,50,51,52,54,55,56,57,58,59,60,61,62,],[-26,-15,-16,-17,-18,-19,53,-12,-3,-5,-7,-9,-11,-24,-25,-22,-23,-1,-2,-4,-6,-8,-10,-13,-14,-21,]),'RBRACKET':([10,11,12,13,14,24,33,34,36,37,38,39,40,41,49,50,51,52,54,55,56,57,58,59,60,61,62,],[-26,-15,-16,-17,-18,-19,52,-20,-12,-3,-5,-7,-9,-11,-24,-25,-22,-23,-1,-2,-4,-6,-8,-10,-13,-14,-21,]),'RPAREN':([10,11,12,13,14,24,34,35,36,37,38,39,40,41,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,],[-26,-15,-16,-17,-18,-19,-20,54,-12,-3,-5,-7,-9,-11,60,61,-24,-25,-22,-23,-1,-2,-4,-6,-8,-10,-13,-14,-21,]),'OF':([15,],[32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,4,5,6,7,8,16,17,18,19,20,21,22,29,30,31,32,42,43,44,45,46,53,],[1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'data':([0,4,5,6,7,8,16,17,18,19,20,21,22,29,30,31,32,42,43,44,45,46,53,],[3,23,25,26,27,28,34,35,36,36,36,36,36,47,49,50,34,36,36,36,36,36,34,]),'list':([0,4,5,6,7,8,16,17,18,19,20,21,22,29,30,31,32,42,43,44,45,46,53,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'list_term':([16,32,53,],[33,51,62,]),'math_Term':([18,19,20,21,22,42,43,44,45,46,],[37,38,39,40,41,55,56,57,58,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> RECEIVE LPAREN data RPAREN','statement',4,'p_receive','tiur.py',67),
  ('statement -> ADD data PLUS math_Term','statement',4,'p_addition','tiur.py',73),
  ('statement -> data PLUS_SYMBOL math_Term','statement',3,'p_addition','tiur.py',74),
  ('statement -> SUBSTRACT data MINUS math_Term','statement',4,'p_substraction','tiur.py',86),
  ('statement -> data MINUS_SYMBOL math_Term','statement',3,'p_substraction','tiur.py',87),
  ('statement -> MULTIPLY data TIMES math_Term','statement',4,'p_multiplcation','tiur.py',99),
  ('statement -> data MULT_SYMBOL math_Term','statement',3,'p_multiplcation','tiur.py',100),
  ('statement -> DIVIDE data BY math_Term','statement',4,'p_division','tiur.py',112),
  ('statement -> data DIV_SYMBOL math_Term','statement',3,'p_division','tiur.py',113),
  ('statement -> RAISE data TO math_Term','statement',4,'p_exponent','tiur.py',125),
  ('statement -> data EXPO_SYMBOL math_Term','statement',3,'p_exponent','tiur.py',126),
  ('math_Term -> data','math_Term',1,'p_math_Term','tiur.py',138),
  ('statement -> SHOW LPAREN data RPAREN','statement',4,'p_show','tiur.py',146),
  ('statement -> SHOW LPAREN NAME RPAREN','statement',4,'p_show','tiur.py',147),
  ('data -> INT','data',1,'p_data','tiur.py',154),
  ('data -> DOUBLE','data',1,'p_data','tiur.py',155),
  ('data -> STRING','data',1,'p_data','tiur.py',156),
  ('data -> list','data',1,'p_data','tiur.py',157),
  ('data -> statement','data',1,'p_data','tiur.py',158),
  ('list_term -> data','list_term',1,'p_list_term','tiur.py',165),
  ('list_term -> data COMMA list_term','list_term',3,'p_list_term','tiur.py',166),
  ('list -> LIST OF list_term','list',3,'p_list','tiur.py',172),
  ('list -> LBRACKET list_term RBRACKET','list',3,'p_list','tiur.py',173),
  ('statement -> NAME IS data','statement',3,'p_is','tiur.py',183),
  ('statement -> NAME EQUAL data','statement',3,'p_is','tiur.py',184),
  ('statement -> NAME','statement',1,'p_variable','tiur.py',191),
]
