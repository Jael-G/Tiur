
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA DOUBLE INT IS LBRACKET LIST LPAREN NAME RBRACKET RECEIVE RPAREN SHOW STRINGstatement : RECEIVE LPAREN DATA RPARENstatement : SHOW LPAREN DATA RPAREN\n  |  SHOW LPAREN NAME RPARENDATA : INT\n          | DOUBLE\n          | STRING\n          | list\n          | statementterm : DATA\n          | DATA COMMA termlist : LBRACKET term RBRACKETstatement : NAME IS DATAstatement : NAME'
    
_lr_action_items = {'RECEIVE':([0,5,6,7,14,24,],[2,2,2,2,2,2,]),'SHOW':([0,5,6,7,14,24,],[3,3,3,3,3,3,]),'NAME':([0,5,6,7,14,24,],[4,4,16,4,4,4,]),'$end':([1,4,9,10,11,12,13,17,18,21,22,23,],[0,-13,-4,-5,-6,-7,-8,-12,-1,-2,-3,-11,]),'LPAREN':([2,3,],[5,6,]),'IS':([4,16,],[7,7,]),'RPAREN':([4,8,9,10,11,12,13,15,16,17,18,21,22,23,],[-13,18,-4,-5,-6,-7,-8,21,22,-12,-1,-2,-3,-11,]),'COMMA':([4,9,10,11,12,13,17,18,20,21,22,23,],[-13,-4,-5,-6,-7,-8,-12,-1,24,-2,-3,-11,]),'RBRACKET':([4,9,10,11,12,13,17,18,19,20,21,22,23,25,],[-13,-4,-5,-6,-7,-8,-12,-1,23,-9,-2,-3,-11,-10,]),'INT':([5,6,7,14,24,],[9,9,9,9,9,]),'DOUBLE':([5,6,7,14,24,],[10,10,10,10,10,]),'STRING':([5,6,7,14,24,],[11,11,11,11,11,]),'LBRACKET':([5,6,7,14,24,],[14,14,14,14,14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,5,6,7,14,24,],[1,13,13,13,13,13,]),'DATA':([5,6,7,14,24,],[8,15,17,20,20,]),'list':([5,6,7,14,24,],[12,12,12,12,12,]),'term':([14,24,],[19,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> RECEIVE LPAREN DATA RPAREN','statement',4,'p_receive','tiur.py',44),
  ('statement -> SHOW LPAREN DATA RPAREN','statement',4,'p_show','tiur.py',50),
  ('statement -> SHOW LPAREN NAME RPAREN','statement',4,'p_show','tiur.py',51),
  ('DATA -> INT','DATA',1,'p_data','tiur.py',58),
  ('DATA -> DOUBLE','DATA',1,'p_data','tiur.py',59),
  ('DATA -> STRING','DATA',1,'p_data','tiur.py',60),
  ('DATA -> list','DATA',1,'p_data','tiur.py',61),
  ('DATA -> statement','DATA',1,'p_data','tiur.py',62),
  ('term -> DATA','term',1,'p_term','tiur.py',67),
  ('term -> DATA COMMA term','term',3,'p_term','tiur.py',68),
  ('list -> LBRACKET term RBRACKET','list',3,'p_list','tiur.py',74),
  ('statement -> NAME IS DATA','statement',3,'p_is','tiur.py',84),
  ('statement -> NAME','statement',1,'p_variable','tiur.py',91),
]
