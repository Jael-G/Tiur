
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA INT IS LBRACKET LIST LPAREN NAME RBRACKET RECEIVE RPAREN SHOW STRINGstatement : NAME IS RECEIVE LPAREN STRING RPARENstatement : SHOW LPAREN DATA RPARENDATA : INT\n          | STRINGstatement : LBRACKET term RBRACKET\n  \n  term : DATA\n       | DATA COMMA term\n  \n  statement : NAME IS DATAstatement : NAME'
    
_lr_action_items = {'NAME':([0,],[2,]),'SHOW':([0,],[3,]),'LBRACKET':([0,],[4,]),'$end':([1,2,9,10,12,14,17,20,],[0,-9,-3,-4,-8,-5,-2,-1,]),'IS':([2,],[5,]),'LPAREN':([3,11,],[6,16,]),'INT':([4,5,6,15,],[9,9,9,9,]),'STRING':([4,5,6,15,16,],[10,10,10,10,19,]),'RECEIVE':([5,],[11,]),'RBRACKET':([7,8,9,10,18,],[14,-6,-3,-4,-7,]),'COMMA':([8,9,10,],[15,-3,-4,]),'RPAREN':([9,10,13,19,],[-3,-4,17,20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'term':([4,15,],[7,18,]),'DATA':([4,5,6,15,],[8,12,13,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME IS RECEIVE LPAREN STRING RPAREN','statement',6,'p_receive','tiur.py',42),
  ('statement -> SHOW LPAREN DATA RPAREN','statement',4,'p_show','tiur.py',47),
  ('DATA -> INT','DATA',1,'p_data','tiur.py',52),
  ('DATA -> STRING','DATA',1,'p_data','tiur.py',53),
  ('statement -> LBRACKET term RBRACKET','statement',3,'p_list','tiur.py',59),
  ('term -> DATA','term',1,'p_list','tiur.py',61),
  ('term -> DATA COMMA term','term',3,'p_list','tiur.py',62),
  ('statement -> NAME IS DATA','statement',3,'p_is','tiur.py',69),
  ('statement -> NAME','statement',1,'p_variable','tiur.py',74),
]
