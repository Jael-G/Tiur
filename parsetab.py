
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA INT IS LBRACKET LIST LPAREN NAME RBRACKET RECEIVE RPAREN SHOW STRINGstatement : RECEIVE LPAREN DATA RPARENstatement : SHOW LPAREN DATA RPAREN\n  |  SHOW LPAREN NAME RPARENDATA : INT\n          | STRING\n          | list\n          | statementterm : DATA\n          | DATA COMMA termlist : LBRACKET term RBRACKETstatement : NAME IS DATAstatement : NAME'
    
_lr_action_items = {'RECEIVE':([0,5,6,7,13,23,],[2,2,2,2,2,2,]),'SHOW':([0,5,6,7,13,23,],[3,3,3,3,3,3,]),'NAME':([0,5,6,7,13,23,],[4,4,15,4,4,4,]),'$end':([1,4,9,10,11,12,16,17,20,21,22,],[0,-12,-4,-5,-6,-7,-11,-1,-2,-3,-10,]),'LPAREN':([2,3,],[5,6,]),'IS':([4,15,],[7,7,]),'RPAREN':([4,8,9,10,11,12,14,15,16,17,20,21,22,],[-12,17,-4,-5,-6,-7,20,21,-11,-1,-2,-3,-10,]),'COMMA':([4,9,10,11,12,16,17,19,20,21,22,],[-12,-4,-5,-6,-7,-11,-1,23,-2,-3,-10,]),'RBRACKET':([4,9,10,11,12,16,17,18,19,20,21,22,24,],[-12,-4,-5,-6,-7,-11,-1,22,-8,-2,-3,-10,-9,]),'INT':([5,6,7,13,23,],[9,9,9,9,9,]),'STRING':([5,6,7,13,23,],[10,10,10,10,10,]),'LBRACKET':([5,6,7,13,23,],[13,13,13,13,13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,5,6,7,13,23,],[1,12,12,12,12,12,]),'DATA':([5,6,7,13,23,],[8,14,16,19,19,]),'list':([5,6,7,13,23,],[11,11,11,11,11,]),'term':([13,23,],[18,24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> RECEIVE LPAREN DATA RPAREN','statement',4,'p_receive','tiur.py',42),
  ('statement -> SHOW LPAREN DATA RPAREN','statement',4,'p_show','tiur.py',48),
  ('statement -> SHOW LPAREN NAME RPAREN','statement',4,'p_show','tiur.py',49),
  ('DATA -> INT','DATA',1,'p_data','tiur.py',56),
  ('DATA -> STRING','DATA',1,'p_data','tiur.py',57),
  ('DATA -> list','DATA',1,'p_data','tiur.py',58),
  ('DATA -> statement','DATA',1,'p_data','tiur.py',59),
  ('term -> DATA','term',1,'p_term','tiur.py',64),
  ('term -> DATA COMMA term','term',3,'p_term','tiur.py',65),
  ('list -> LBRACKET term RBRACKET','list',3,'p_list','tiur.py',71),
  ('statement -> NAME IS DATA','statement',3,'p_is','tiur.py',81),
  ('statement -> NAME','statement',1,'p_variable','tiur.py',88),
]
